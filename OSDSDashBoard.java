/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Warren
 */

import java.awt.Color;
import java.awt.*;
import javax.swing.*;
import java.sql.*;

import net.proteanit.sql.DbUtils;
import javax.swing.table.TableModel;
import javax.swing.table.DefaultTableModel;

import java.sql.DatabaseMetaData;

import java.awt.FlowLayout;
import java.awt.Dialog.ModalityType;
import myapplication.ConnectDB;



public class OSDSDashBoard extends javax.swing.JFrame {

    //VARIABLES
    Connection conn = null;
    PreparedStatement ps1=null;
    ResultSet rs1 = null;
    public String selectedTableName;
    boolean isAdd = false, isEdit = false;
    int prevSelectedRow = 0;
    public String userName;
    
    Color defaultMenuColor, hoveredMenuColor, quickAccessDefaultColor, quickAccessHoveredColor;
    public OSDSDashBoard(String userName) {
        this.userName = userName;
        setUndecorated(true);
        initComponents();
        setBackground(new Color(0.0f,0.0f,0.0f,0.0f));
        defaultMenuColor = new Color(235,235,235);
        hoveredMenuColor = new Color(200,200,200);
        
        quickAccessDefaultColor = new Color(121,0,0);
        quickAccessHoveredColor = new Color(100,0,0);
        
        PanelDisabler.setVisible(false);
        PanelDisabler.setEnabled(false);
        
        AddRecordPanel.setVisible(false);
        AddRecordPanel.setEnabled(false);
        
        LatestViolationsFullWindow.setVisible(false);
        LatestViolationsFullWindow.setEnabled(false);
        
        DimensionTableSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DimensionTableSelectorActionPerformed(evt);
            }
        });
     
    }

    private OSDSDashBoard() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AddRecordPanel = new SwingPackage.PanelBorder();
        jLabel13 = new javax.swing.JLabel();
        RecordCancelButton = new SwingPackage.ButtonMaker();
        RecordConfirmButton = new SwingPackage.ButtonMaker();
        LatestViolationsFullWindow = new SwingPackage.PanelBorder();
        jScrollPane4 = new javax.swing.JScrollPane();
        LatestViolationsFullWindowTable = new javax.swing.JTable();
        btnViolationsButton = new SwingPackage.PanelBorder();
        jLabel32 = new javax.swing.JLabel();
        PanelDisabler = new DisabledPanel();
        DashboardHolder = new SwingPackage.PanelBorder();
        TitleBar = new javax.swing.JPanel();
        s1 = new SwingPackage.ButtonMaker();
        s3 = new SwingPackage.ButtonMaker();
        jLabel6 = new javax.swing.JLabel();
        MenuHolder = new javax.swing.JPanel();
        OSDS_title = new javax.swing.JLabel();
        Admin = new javax.swing.JLabel();
        MenuHolder1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        MenuHolder2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        MenuHolder3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        buttonMaker1 = new SwingPackage.ButtonMaker();
        FacultyTitleHolder = new javax.swing.JLabel();
        NameHolder = new javax.swing.JLabel();
        FireLogo = new javax.swing.JLabel();
        Background = new SwingPackage.MenuPanel();
        PanelHolder = new javax.swing.JTabbedPane();
        HomePanel = new javax.swing.JPanel();
        OOSDAS = new javax.swing.JLabel();
        Dash_Title = new javax.swing.JLabel();
        PLMSeal = new javax.swing.JLabel();
        QuickViolationHolder = new javax.swing.JPanel();
        LatestViolationHolder = new SwingPackage.PanelBorder();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLatestViolationTable = new javax.swing.JTable();
        LatestViolationsTitleBar = new javax.swing.JLabel();
        btnViewViolations = new SwingPackage.PanelBorder();
        jLabel14 = new javax.swing.JLabel();
        QuickAccessHolder = new javax.swing.JPanel();
        TabTitleHolder = new javax.swing.JLabel();
        btnLogoutButton = new SwingPackage.PanelBorder();
        jLabel9 = new javax.swing.JLabel();
        btnOutlookButton = new SwingPackage.PanelBorder();
        jLabel12 = new javax.swing.JLabel();
        btnRecordButton = new SwingPackage.PanelBorder();
        jLabel8 = new javax.swing.JLabel();
        btnProfileButton = new SwingPackage.PanelBorder();
        jLabel7 = new javax.swing.JLabel();
        AnnouncementHolder = new SwingPackage.PanelBorder();
        AnnHolder1 = new SwingPackage.PanelBorder();
        jLabel10 = new javax.swing.JLabel();
        redirectButton1 = new javax.swing.JLabel();
        AnnHolder2 = new SwingPackage.PanelBorder();
        jLabel26 = new javax.swing.JLabel();
        redirectButton4 = new javax.swing.JLabel();
        AnnHolder3 = new SwingPackage.PanelBorder();
        jLabel28 = new javax.swing.JLabel();
        redirectButton3 = new javax.swing.JLabel();
        AnnHolder4 = new SwingPackage.PanelBorder();
        jLabel29 = new javax.swing.JLabel();
        redirectButton2 = new javax.swing.JLabel();
        QuickSearchHolder = new javax.swing.JPanel();
        SearchTitleBar = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        SearchTable = new SwingPackage.PanelBorder();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblQuickSearchTable = new javax.swing.JTable();
        btnQuickSearch = new SwingPackage.ButtonMaker();
        btnViewQuickSearch = new SwingPackage.PanelBorder();
        jLabel30 = new javax.swing.JLabel();
        MemoTitle = new javax.swing.JLabel();
        PLMPortalHolder = new SwingPackage.PanelBorder();
        jLabel4 = new javax.swing.JLabel();
        btnFacebookPage = new SwingPackage.ButtonMaker();
        btnOfficialWebsite = new SwingPackage.ButtonMaker();
        btnTeams = new SwingPackage.ButtonMaker();
        ViolationPanel = new javax.swing.JPanel();
        Dash_Title1 = new javax.swing.JLabel();
        OOSDAS1 = new javax.swing.JLabel();
        PLMSeal1 = new javax.swing.JLabel();
        TabTitleHolder1 = new javax.swing.JLabel();
        SYholder = new javax.swing.JLabel();
        SEMESTERholder = new javax.swing.JLabel();
        panelBorder1 = new SwingPackage.PanelBorder();
        panelBorder3 = new SwingPackage.PanelBorder();
        EditButton = new javax.swing.JButton();
        AddRecordButton = new SwingPackage.ButtonMaker();
        DatabasePanel = new javax.swing.JPanel();
        Dash_Title2 = new javax.swing.JLabel();
        OOSDAS2 = new javax.swing.JLabel();
        PLMSeal2 = new javax.swing.JLabel();
        TabTitleHolder2 = new javax.swing.JLabel();
        SYholder1 = new javax.swing.JLabel();
        SEMESTERholder1 = new javax.swing.JLabel();
        panelBorder2 = new SwingPackage.PanelBorder();
        jScrollPane1 = new javax.swing.JScrollPane();
        DimensionTable = new javax.swing.JTable();
        DimensionTableSelector = new javax.swing.JComboBox<>();
        TitleField = new javax.swing.JLabel();
        selectedTableField = new javax.swing.JTextField();
        dimensionEditButton = new SwingPackage.ButtonMaker();
        dimensionAddButton = new SwingPackage.ButtonMaker();
        dimensionDeleteButton = new SwingPackage.ButtonMaker();
        panelBorder4 = new SwingPackage.PanelBorder();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        defaultPanel = new javax.swing.JPanel();
        editStudentPanel = new javax.swing.JPanel();
        lblStudentNo = new javax.swing.JLabel();
        txtStudentNo = new javax.swing.JTextField();
        lblLastname = new javax.swing.JLabel();
        lblFirstname = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtLastname = new javax.swing.JTextField();
        txtFirstname = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        lblCpNum = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtCpNum = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        lblBirthday = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        txtBirthday = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtDateOpened = new javax.swing.JTextField();
        txtDateClosed = new javax.swing.JTextField();
        txtCourseCode = new javax.swing.JTextField();
        cmbEditStudentGender = new javax.swing.JComboBox<>();
        cmbEditStudentStatus = new javax.swing.JComboBox<>();
        editCoursePanel = new javax.swing.JPanel();
        lblCourseCode = new javax.swing.JLabel();
        txtEditCourseCode = new javax.swing.JTextField();
        lblDateOpenedCourse = new javax.swing.JLabel();
        txtEditDateOpened = new javax.swing.JTextField();
        lblDateClosedCourse = new javax.swing.JLabel();
        txtEditDateClosed = new javax.swing.JTextField();
        lblCourseDescription = new javax.swing.JLabel();
        txtEditCourseDescription = new javax.swing.JTextField();
        lblCollegeCodeFK = new javax.swing.JLabel();
        txtCollegeCodeFK = new javax.swing.JTextField();
        lblCourseStatus = new javax.swing.JLabel();
        cmbEditCourseStatus = new javax.swing.JComboBox<>();
        editCollegePanel = new javax.swing.JPanel();
        lblCollegeCode = new javax.swing.JLabel();
        txtEditCollegeCode = new javax.swing.JTextField();
        lblCollegeDescription = new javax.swing.JLabel();
        txtEditCollegeDescription = new javax.swing.JTextField();
        lblCollegeDateOpened = new javax.swing.JLabel();
        txtEditCollegeDateOpened = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtEditCollegeDateClosed = new javax.swing.JTextField();
        lblCollegeStatus = new javax.swing.JLabel();
        cmbEditCollegeStatusSelector = new javax.swing.JComboBox<>();
        editEmployeePanel = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        txtEditEmployeeID = new javax.swing.JTextField();
        lblEditEmployeeLastname = new javax.swing.JLabel();
        txtEditEmployeeFirstname = new javax.swing.JTextField();
        lblEditEmployeeFirstname = new javax.swing.JLabel();
        txtEditEmployeeLastname = new javax.swing.JTextField();
        lblEditEmployeeEmail = new javax.swing.JLabel();
        txtEditEmployeeEmail = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtEditEmployeeCpNum = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtEditEmployeeAddress = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtEditEmployeeBirthday = new javax.swing.JTextField();
        lblEditEmployeeGender = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        cmbEditEmployeeStatus = new javax.swing.JComboBox<>();
        cmbEditEmployeeGender = new javax.swing.JComboBox<>();
        editViolationPanel = new javax.swing.JPanel();
        lblEditViolationCode = new javax.swing.JLabel();
        txtEditViolationCode = new javax.swing.JTextField();
        lblEditViolationDescription = new javax.swing.JLabel();
        txtEditViolationDescription = new javax.swing.JTextField();
        lblSeverityCode = new javax.swing.JLabel();
        txtEditSeverityCodeFK = new javax.swing.JTextField();
        lblEditViolationStatus = new javax.swing.JLabel();
        cmbEditViolationStatus = new javax.swing.JComboBox<>();
        editSeverityPanel = new javax.swing.JPanel();
        txtEditSeverityDescription = new javax.swing.JTextField();
        lblEditSeverityCode = new javax.swing.JLabel();
        lblEditSeverityDescription = new javax.swing.JLabel();
        txtEditSeverityCode = new javax.swing.JTextField();
        editSemesterPanel = new javax.swing.JPanel();
        lblEditSemester = new javax.swing.JLabel();
        txtEditSemester = new javax.swing.JTextField();
        editSchoolYearPanel = new javax.swing.JPanel();
        lblSchoolYear = new javax.swing.JLabel();
        txtEditSchoolYear = new javax.swing.JTextField();
        addStudentPanel = new javax.swing.JPanel();
        txtAddCourseDateOpenedFK = new javax.swing.JTextField();
        lblAddCpNum = new javax.swing.JLabel();
        txtAddCourseDateClosedFK = new javax.swing.JTextField();
        lblAddAddress = new javax.swing.JLabel();
        lblAddStudentNo = new javax.swing.JLabel();
        txtAddStudentCpNum = new javax.swing.JTextField();
        cmbAddStudentGender = new javax.swing.JComboBox<>();
        txtAddStudentNo = new javax.swing.JTextField();
        txtAddStudentAddress = new javax.swing.JTextField();
        cmbAddStudentStatus = new javax.swing.JComboBox<>();
        lblAddLastname = new javax.swing.JLabel();
        lblAddBirthday = new javax.swing.JLabel();
        lblAddFirstname = new javax.swing.JLabel();
        lblAddStatus = new javax.swing.JLabel();
        lblAddEmail = new javax.swing.JLabel();
        txtAddStudentBirthday = new javax.swing.JTextField();
        txtAddStudentLastname = new javax.swing.JTextField();
        lblAddCourseCode = new javax.swing.JLabel();
        txtAddStudentFirstname = new javax.swing.JTextField();
        lblAddDateOpened = new javax.swing.JLabel();
        txtAddStudentEmail = new javax.swing.JTextField();
        lblAddDateClosed = new javax.swing.JLabel();
        lbAddlGender = new javax.swing.JLabel();
        cmbAddStudentCourseCode = new javax.swing.JComboBox<>();
        addCollegePanel = new javax.swing.JPanel();
        lblCollegeDescription1 = new javax.swing.JLabel();
        txtAddCollegeDescription = new javax.swing.JTextField();
        lblCollegeDateOpened1 = new javax.swing.JLabel();
        txtAddCollegeDateOpened = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtAddCollegeDateClosed = new javax.swing.JTextField();
        lblCollegeStatus1 = new javax.swing.JLabel();
        cmbAddCollegeStatus = new javax.swing.JComboBox<>();
        lblCollegeCode1 = new javax.swing.JLabel();
        txtAddCollegeCode = new javax.swing.JTextField();
        addCoursePanel = new javax.swing.JPanel();
        lblDateOpenedCourse1 = new javax.swing.JLabel();
        txtAddCourseDateOpened = new javax.swing.JTextField();
        lblDateClosedCourse1 = new javax.swing.JLabel();
        txtAddCourseDateClosed = new javax.swing.JTextField();
        lblCourseDescription1 = new javax.swing.JLabel();
        txtAddCourseDescription = new javax.swing.JTextField();
        lblCollegeCodeFK1 = new javax.swing.JLabel();
        lblCourseStatus1 = new javax.swing.JLabel();
        lblCourseCode1 = new javax.swing.JLabel();
        cmbAddCourseStatus = new javax.swing.JComboBox<>();
        txtAddCourseCode = new javax.swing.JTextField();
        cmbAddCollegeCodeFK = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        txtAddCollegeDateOpenedFK = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtAddCollegeDateClosedFK = new javax.swing.JTextField();
        addEmployeePanel = new javax.swing.JPanel();
        lblAddEmployeeCpNum = new javax.swing.JLabel();
        txtAddEmployeeCpNum = new javax.swing.JTextField();
        lblAddEmployeeAddress = new javax.swing.JLabel();
        lblAddEmployeeID = new javax.swing.JLabel();
        txtAddEmployeeAddress = new javax.swing.JTextField();
        txtAddEmployeeID = new javax.swing.JTextField();
        lblAddEmployeeBirthday = new javax.swing.JLabel();
        lblAddEmployeeLastname = new javax.swing.JLabel();
        txtAddEmployeeBirthday = new javax.swing.JTextField();
        txtAddEmployeeFirstname = new javax.swing.JTextField();
        lblAddEmployeeGender = new javax.swing.JLabel();
        lblAddEmployeeFirstname = new javax.swing.JLabel();
        lblAddEmployeeStatus = new javax.swing.JLabel();
        txtAddEmployeeLastname = new javax.swing.JTextField();
        cmbAddEmployeeStatus = new javax.swing.JComboBox<>();
        lblAddEmployeeEmail = new javax.swing.JLabel();
        cmbAddEmployeeGender = new javax.swing.JComboBox<>();
        txtAddEmployeeEmail = new javax.swing.JTextField();
        addViolationPanel = new javax.swing.JPanel();
        lbllAddViolationStatus = new javax.swing.JLabel();
        cmbAddViolationStatus = new javax.swing.JComboBox<>();
        lblAddViolationCode = new javax.swing.JLabel();
        txtAddViolationCode = new javax.swing.JTextField();
        lblAddViolationDescription = new javax.swing.JLabel();
        txtAddViolationDescription = new javax.swing.JTextField();
        lblAddSeverityCodeFK = new javax.swing.JLabel();
        cmbAddSeverityCodeFK = new javax.swing.JComboBox<>();
        addSeverityPanel = new javax.swing.JPanel();
        txtAddSeverityDescription = new javax.swing.JTextField();
        lblAddSeverityCode1 = new javax.swing.JLabel();
        lblAddSeverityDescription = new javax.swing.JLabel();
        txtAddSeverityCode = new javax.swing.JTextField();
        addSchoolYearPanel = new javax.swing.JPanel();
        txtAddSchoolYear = new javax.swing.JTextField();
        lblAddSchoolYear = new javax.swing.JLabel();
        addSemesterPanel = new javax.swing.JPanel();
        lblAddSemester = new javax.swing.JLabel();
        txtAddSemester = new javax.swing.JTextField();
        operationLabel = new javax.swing.JLabel();
        CancelChangesButton = new SwingPackage.ButtonMaker();
        ConfirmChangesButton = new SwingPackage.ButtonMaker();
        ProfilePanel = new javax.swing.JPanel();
        Dash_Title3 = new javax.swing.JLabel();
        PLMSeal3 = new javax.swing.JLabel();
        OOSDAS3 = new javax.swing.JLabel();
        PersonalInformationPanel = new SwingPackage.PanelBorder();
        pinfo1 = new javax.swing.JLabel();
        pinfo2 = new javax.swing.JLabel();
        pinfo3 = new javax.swing.JLabel();
        pinfo4 = new javax.swing.JLabel();
        pinfo5 = new javax.swing.JLabel();
        pinfo6 = new javax.swing.JLabel();
        pinfo7 = new javax.swing.JLabel();
        pinfo8 = new javax.swing.JLabel();
        pinfo9 = new javax.swing.JLabel();
        txtUserInfoName = new javax.swing.JTextField();
        txtStatus = new javax.swing.JTextField();
        txtPLMEmail = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtGender = new javax.swing.JTextField();
        txtContactNum = new javax.swing.JTextField();
        txtAddress2 = new javax.swing.JTextField();
        txtBday = new javax.swing.JTextField();
        txtPersonalEmail = new javax.swing.JTextField();
        Subtitle1 = new javax.swing.JLabel();
        Subtitle2 = new javax.swing.JLabel();
        ChangePasswordPanel = new SwingPackage.PanelBorder();
        Subtitle3 = new javax.swing.JLabel();
        pass1 = new javax.swing.JLabel();
        pass2 = new javax.swing.JLabel();
        txtNewPassword = new javax.swing.JTextField();
        showpass1 = new SwingPackage.ButtonMaker();
        btnSavePassword = new SwingPackage.ButtonMaker();
        txtCurrentPassword = new javax.swing.JPasswordField();
        txtCurrentPassword1 = new javax.swing.JPasswordField();

        AddRecordPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel13.setFont(new java.awt.Font("Segoe UI Semibold", 0, 15)); // NOI18N
        jLabel13.setText("ADD RECORD");

        RecordCancelButton.setForeground(new java.awt.Color(255, 255, 255));
        RecordCancelButton.setText("Cancel");
        RecordCancelButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        RecordCancelButton.setRadius(10);
        RecordCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecordCancelButtonActionPerformed(evt);
            }
        });

        RecordConfirmButton.setForeground(new java.awt.Color(255, 255, 255));
        RecordConfirmButton.setText("Confirm");
        RecordConfirmButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        RecordConfirmButton.setRadius(10);

        javax.swing.GroupLayout AddRecordPanelLayout = new javax.swing.GroupLayout(AddRecordPanel);
        AddRecordPanel.setLayout(AddRecordPanelLayout);
        AddRecordPanelLayout.setHorizontalGroup(
            AddRecordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddRecordPanelLayout.createSequentialGroup()
                .addGroup(AddRecordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddRecordPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel13))
                    .addGroup(AddRecordPanelLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(RecordCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RecordConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        AddRecordPanelLayout.setVerticalGroup(
            AddRecordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddRecordPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 414, Short.MAX_VALUE)
                .addGroup(AddRecordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RecordCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RecordConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        LatestViolationsFullWindow.setBackground(new java.awt.Color(255, 255, 255));
        LatestViolationsFullWindow.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LatestViolationsFullWindowTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        LatestViolationsFullWindowTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        LatestViolationsFullWindowTable.setAutoscrolls(false);
        LatestViolationsFullWindowTable.setFocusable(false);
        jScrollPane4.setViewportView(LatestViolationsFullWindowTable);

        LatestViolationsFullWindow.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 20, 840, 440));

        btnViolationsButton.setBackground(new java.awt.Color(122, 0, 0));
        btnViolationsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnViolationsButtonMouseClicked(evt);
            }
        });
        btnViolationsButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel32.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("CLOSE");
        btnViolationsButton.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 7, 40, -1));

        LatestViolationsFullWindow.add(btnViolationsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 470, 80, 30));

        PanelDisabler.setPreferredSize(new java.awt.Dimension(1280, 760));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 51, 255));
        setIconImages(null);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        DashboardHolder.setBackground(new java.awt.Color(255, 255, 255));
        DashboardHolder.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TitleBar.setBackground(new java.awt.Color(255, 255, 255));
        TitleBar.setOpaque(false);
        TitleBar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        s1.setColor(new java.awt.Color(168, 34, 34));
        s1.setColorClick(new java.awt.Color(168, 34, 34));
        s1.setColorOver(new java.awt.Color(204, 49, 49));
        s1.setRadius(50);
        s1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s1MouseClicked(evt);
            }
        });
        s1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s1ActionPerformed(evt);
            }
        });
        TitleBar.add(s1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 10, 20, 20));

        s3.setBackground(new java.awt.Color(0, 153, 51));
        s3.setColor(new java.awt.Color(0, 153, 51));
        s3.setColorClick(new java.awt.Color(0, 153, 51));
        s3.setColorOver(new java.awt.Color(77, 166, 50));
        s3.setRadius(50);
        s3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s3ActionPerformed(evt);
            }
        });
        TitleBar.add(s3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1025, 10, 20, 20));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(195, 195, 195));
        jLabel6.setText("P A M A N T A S A N  N G  L U N G S O D  N G  M A Y N I L A");
        TitleBar.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, -1, -1));

        DashboardHolder.add(TitleBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, 1090, 40));

        MenuHolder.setBackground(new java.awt.Color(235, 235, 235));
        MenuHolder.setOpaque(false);
        MenuHolder.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        OSDS_title.setFont(new java.awt.Font("Segoe UI", 1, 39)); // NOI18N
        OSDS_title.setForeground(new java.awt.Color(122, 0, 0));
        OSDS_title.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        OSDS_title.setText("OSDS");
        MenuHolder.add(OSDS_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 28, -1, 50));

        Admin.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        Admin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Admin.setText("ADMINISTRATOR ");
        MenuHolder.add(Admin, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 68, 110, 20));

        MenuHolder1.setBackground(new java.awt.Color(235, 235, 235));
        MenuHolder1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuHolder1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MenuHolder1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuHolder1MouseExited(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home 34x34.png"))); // NOI18N
        jLabel1.setText(" Home");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout MenuHolder1Layout = new javax.swing.GroupLayout(MenuHolder1);
        MenuHolder1.setLayout(MenuHolder1Layout);
        MenuHolder1Layout.setHorizontalGroup(
            MenuHolder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuHolder1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addContainerGap(86, Short.MAX_VALUE))
        );
        MenuHolder1Layout.setVerticalGroup(
            MenuHolder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuHolder1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(22, 22, 22))
        );

        MenuHolder.add(MenuHolder1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 193, 190, 45));

        MenuHolder2.setBackground(new java.awt.Color(235, 235, 235));
        MenuHolder2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuHolder2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MenuHolder2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuHolder2MouseExited(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/user 34x34.png"))); // NOI18N
        jLabel2.setText(" Violation Record");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel2MouseExited(evt);
            }
        });

        javax.swing.GroupLayout MenuHolder2Layout = new javax.swing.GroupLayout(MenuHolder2);
        MenuHolder2.setLayout(MenuHolder2Layout);
        MenuHolder2Layout.setHorizontalGroup(
            MenuHolder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuHolder2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        MenuHolder2Layout.setVerticalGroup(
            MenuHolder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuHolder2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MenuHolder.add(MenuHolder2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 190, 45));

        MenuHolder3.setBackground(new java.awt.Color(235, 235, 235));
        MenuHolder3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuHolder3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MenuHolder3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuHolder3MouseExited(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/database 34x34.png"))); // NOI18N
        jLabel3.setText(" Database");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel3MouseExited(evt);
            }
        });

        javax.swing.GroupLayout MenuHolder3Layout = new javax.swing.GroupLayout(MenuHolder3);
        MenuHolder3.setLayout(MenuHolder3Layout);
        MenuHolder3Layout.setHorizontalGroup(
            MenuHolder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuHolder3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel3)
                .addContainerGap(67, Short.MAX_VALUE))
        );
        MenuHolder3Layout.setVerticalGroup(
            MenuHolder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuHolder3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MenuHolder.add(MenuHolder3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 190, 45));

        buttonMaker1.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        buttonMaker1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/30x30pfp.png"))); // NOI18N
        buttonMaker1.setBorderColor(new java.awt.Color(235, 235, 235));
        buttonMaker1.setColor(new java.awt.Color(102, 102, 102));
        buttonMaker1.setColorClick(new java.awt.Color(102, 102, 102));
        buttonMaker1.setColorOver(new java.awt.Color(60, 60, 60));
        buttonMaker1.setRadius(50);
        buttonMaker1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonMaker1MouseClicked(evt);
            }
        });
        MenuHolder.add(buttonMaker1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 650, -1, -1));

        FacultyTitleHolder.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        FacultyTitleHolder.setText("Faculty");
        MenuHolder.add(FacultyTitleHolder, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 670, -1, -1));

        NameHolder.setFont(new java.awt.Font("Segoe UI Semibold", 0, 15)); // NOI18N
        NameHolder.setText("Marc Warren Obina");
        MenuHolder.add(NameHolder, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 650, 130, -1));

        FireLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/greyfire.png"))); // NOI18N
        FireLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        MenuHolder.add(FireLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 450, 210, -1));

        Background.setBackground(new java.awt.Color(235, 235, 235));

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 190, Short.MAX_VALUE)
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 760, Short.MAX_VALUE)
        );

        MenuHolder.add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 760));

        DashboardHolder.add(MenuHolder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 760));

        PanelHolder.setBackground(new java.awt.Color(255, 255, 255));
        PanelHolder.setForeground(new java.awt.Color(255, 255, 255));

        HomePanel.setBackground(new java.awt.Color(255, 255, 255));
        HomePanel.setOpaque(false);
        HomePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        OOSDAS.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        OOSDAS.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        OOSDAS.setText("OFFICE OF STUDENT DEVELOPMENT AND SERVICES");
        HomePanel.add(OOSDAS, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 410, 10));

        Dash_Title.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        Dash_Title.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Dash_Title.setText("Dashboard");
        HomePanel.add(Dash_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, -1, 30));

        PLMSeal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/plmSmallLogo.png"))); // NOI18N
        HomePanel.add(PLMSeal, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        QuickViolationHolder.setBackground(new java.awt.Color(255, 255, 255));
        QuickViolationHolder.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LatestViolationHolder.setBackground(new java.awt.Color(235, 235, 235));

        tblLatestViolationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblLatestViolationTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblLatestViolationTable.setFocusable(false);
        jScrollPane2.setViewportView(tblLatestViolationTable);

        javax.swing.GroupLayout LatestViolationHolderLayout = new javax.swing.GroupLayout(LatestViolationHolder);
        LatestViolationHolder.setLayout(LatestViolationHolderLayout);
        LatestViolationHolderLayout.setHorizontalGroup(
            LatestViolationHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LatestViolationHolderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                .addContainerGap())
        );
        LatestViolationHolderLayout.setVerticalGroup(
            LatestViolationHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LatestViolationHolderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addContainerGap())
        );

        QuickViolationHolder.add(LatestViolationHolder, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 620, 130));

        LatestViolationsTitleBar.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        LatestViolationsTitleBar.setText("Latest Violations");
        QuickViolationHolder.add(LatestViolationsTitleBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        btnViewViolations.setBackground(new java.awt.Color(122, 0, 0));
        btnViewViolations.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnViewViolationsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnViewViolationsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnViewViolationsMouseExited(evt);
            }
        });
        btnViewViolations.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("VIEW");
        btnViewViolations.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 0, -1, 20));

        QuickViolationHolder.add(btnViewViolations, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, 100, 20));

        HomePanel.add(QuickViolationHolder, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 670, 190));

        QuickAccessHolder.setBackground(new java.awt.Color(255, 255, 255));
        QuickAccessHolder.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TabTitleHolder.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        TabTitleHolder.setText("Quick Access");
        QuickAccessHolder.add(TabTitleHolder, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        btnLogoutButton.setBackground(new java.awt.Color(121, 0, 0));
        btnLogoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLogoutButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLogoutButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLogoutButtonMouseExited(evt);
            }
        });
        btnLogoutButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logoutprofile25x25.png"))); // NOI18N
        jLabel9.setText(" Log-out");
        btnLogoutButton.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 5, -1, 30));

        QuickAccessHolder.add(btnLogoutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 50, 140, 40));

        btnOutlookButton.setBackground(new java.awt.Color(121, 0, 0));
        btnOutlookButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOutlookButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnOutlookButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnOutlookButtonMouseExited(evt);
            }
        });
        btnOutlookButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/emailwhite25x25.png"))); // NOI18N
        jLabel12.setText(" Outlook");
        btnOutlookButton.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 5, -1, 30));

        QuickAccessHolder.add(btnOutlookButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 50, 140, 40));

        btnRecordButton.setBackground(new java.awt.Color(121, 0, 0));
        btnRecordButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRecordButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRecordButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRecordButtonMouseExited(evt);
            }
        });
        btnRecordButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/editrecord25x25.png"))); // NOI18N
        jLabel8.setText(" Record");
        btnRecordButton.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 5, 80, 30));

        QuickAccessHolder.add(btnRecordButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 140, 40));

        btnProfileButton.setBackground(new java.awt.Color(121, 0, 0));
        btnProfileButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnProfileButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnProfileButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnProfileButtonMouseExited(evt);
            }
        });
        btnProfileButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/editprofile25x25.png"))); // NOI18N
        jLabel7.setText(" Profile");
        btnProfileButton.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 5, 80, 30));

        QuickAccessHolder.add(btnProfileButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 140, 40));

        HomePanel.add(QuickAccessHolder, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 670, 110));

        AnnouncementHolder.setBackground(new java.awt.Color(235, 235, 235));
        AnnouncementHolder.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AnnHolder1.setBackground(new java.awt.Color(215, 215, 215));
        AnnHolder1.setForeground(new java.awt.Color(255, 255, 255));
        AnnHolder1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AnnHolder1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AnnHolder1MouseExited(evt);
            }
        });
        AnnHolder1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel10.setText("Admission for the College of Engineering -Graduate Program");
        AnnHolder1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 240, -1));

        redirectButton1.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        redirectButton1.setForeground(new java.awt.Color(122, 0, 0));
        redirectButton1.setText("Click here to read the announcement");
        redirectButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                redirectButton1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                redirectButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                redirectButton1MouseExited(evt);
            }
        });
        AnnHolder1.add(redirectButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        AnnouncementHolder.add(AnnHolder1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 270, 60));

        AnnHolder2.setBackground(new java.awt.Color(215, 215, 215));
        AnnHolder2.setForeground(new java.awt.Color(255, 255, 255));
        AnnHolder2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AnnHolder2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AnnHolder2MouseExited(evt);
            }
        });
        AnnHolder2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel26.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel26.setText("Advisory: Classes on November 23-25, 2023");
        AnnHolder2.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 240, -1));

        redirectButton4.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        redirectButton4.setForeground(new java.awt.Color(122, 0, 0));
        redirectButton4.setText("Click here to read the announcement");
        redirectButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                redirectButton4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                redirectButton4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                redirectButton4MouseExited(evt);
            }
        });
        AnnHolder2.add(redirectButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        AnnouncementHolder.add(AnnHolder2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 270, 60));

        AnnHolder3.setBackground(new java.awt.Color(215, 215, 215));
        AnnHolder3.setForeground(new java.awt.Color(255, 255, 255));
        AnnHolder3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AnnHolder3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AnnHolder3MouseExited(evt);
            }
        });
        AnnHolder3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel28.setText("18-Day Campaign to End Violence Against Women (VAW)");
        AnnHolder3.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 240, -1));

        redirectButton3.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        redirectButton3.setForeground(new java.awt.Color(122, 0, 0));
        redirectButton3.setText("Click here to read the announcement");
        redirectButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                redirectButton3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                redirectButton3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                redirectButton3MouseExited(evt);
            }
        });
        AnnHolder3.add(redirectButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        AnnouncementHolder.add(AnnHolder3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 270, 60));

        AnnHolder4.setBackground(new java.awt.Color(215, 215, 215));
        AnnHolder4.setForeground(new java.awt.Color(255, 255, 255));
        AnnHolder4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AnnHolder4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AnnHolder4MouseExited(evt);
            }
        });
        AnnHolder4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel29.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel29.setText("PLM ADMISSION TEST (PLMAT) 2024-2025");
        AnnHolder4.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 240, -1));

        redirectButton2.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        redirectButton2.setForeground(new java.awt.Color(122, 0, 0));
        redirectButton2.setText("Click here to read the announcement");
        redirectButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                redirectButton2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                redirectButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                redirectButton2MouseExited(evt);
            }
        });
        AnnHolder4.add(redirectButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        AnnouncementHolder.add(AnnHolder4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 270, 60));

        HomePanel.add(AnnouncementHolder, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 190, 310, 320));

        QuickSearchHolder.setBackground(new java.awt.Color(255, 255, 255));
        QuickSearchHolder.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SearchTitleBar.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        SearchTitleBar.setText("Quick Search");
        QuickSearchHolder.add(SearchTitleBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jComboBox1.setBackground(new java.awt.Color(122, 0, 0));
        jComboBox1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 10)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        QuickSearchHolder.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 150, 26));

        jTextField1.setBackground(new java.awt.Color(235, 235, 235));
        jTextField1.setText("Search Here");
        jTextField1.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextField1MouseExited(evt);
            }
        });
        QuickSearchHolder.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 260, -1));

        SearchTable.setBackground(new java.awt.Color(235, 235, 235));

        tblQuickSearchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblQuickSearchTable.setFocusable(false);
        jScrollPane3.setViewportView(tblQuickSearchTable);

        javax.swing.GroupLayout SearchTableLayout = new javax.swing.GroupLayout(SearchTable);
        SearchTable.setLayout(SearchTableLayout);
        SearchTableLayout.setHorizontalGroup(
            SearchTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                .addContainerGap())
        );
        SearchTableLayout.setVerticalGroup(
            SearchTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                .addContainerGap())
        );

        QuickSearchHolder.add(SearchTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 620, 170));

        btnQuickSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnQuickSearch.setText("Search");
        btnQuickSearch.setRadius(10);
        btnQuickSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnQuickSearchMouseClicked(evt);
            }
        });
        btnQuickSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuickSearchActionPerformed(evt);
            }
        });
        QuickSearchHolder.add(btnQuickSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 50, -1, 28));

        btnViewQuickSearch.setBackground(new java.awt.Color(122, 0, 0));
        btnViewQuickSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnViewQuickSearchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnViewQuickSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnViewQuickSearchMouseExited(evt);
            }
        });
        btnViewQuickSearch.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel30.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("VIEW");
        btnViewQuickSearch.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 4, -1, 20));

        QuickSearchHolder.add(btnViewQuickSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 50, 100, 28));

        HomePanel.add(QuickSearchHolder, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, 670, 270));

        MemoTitle.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        MemoTitle.setText("University Announcement");
        HomePanel.add(MemoTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 160, -1, -1));

        PLMPortalHolder.setBackground(new java.awt.Color(235, 235, 235));
        PLMPortalHolder.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 15)); // NOI18N
        jLabel4.setText("PLM Portal");
        PLMPortalHolder.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));

        btnFacebookPage.setForeground(new java.awt.Color(255, 255, 255));
        btnFacebookPage.setText("Facebook Page");
        btnFacebookPage.setBorderColor(new java.awt.Color(235, 235, 235));
        btnFacebookPage.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnFacebookPage.setRadius(15);
        btnFacebookPage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFacebookPageMouseClicked(evt);
            }
        });
        PLMPortalHolder.add(btnFacebookPage, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 140, 30));

        btnOfficialWebsite.setForeground(new java.awt.Color(255, 255, 255));
        btnOfficialWebsite.setText("Official Website");
        btnOfficialWebsite.setBorderColor(new java.awt.Color(235, 235, 235));
        btnOfficialWebsite.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnOfficialWebsite.setRadius(15);
        btnOfficialWebsite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOfficialWebsiteMouseClicked(evt);
            }
        });
        btnOfficialWebsite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOfficialWebsiteActionPerformed(evt);
            }
        });
        PLMPortalHolder.add(btnOfficialWebsite, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 140, 30));

        btnTeams.setForeground(new java.awt.Color(255, 255, 255));
        btnTeams.setText("Microsoft Teams");
        btnTeams.setBorderColor(new java.awt.Color(235, 235, 235));
        btnTeams.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnTeams.setRadius(15);
        btnTeams.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTeamsMouseClicked(evt);
            }
        });
        PLMPortalHolder.add(btnTeams, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 140, 30));

        HomePanel.add(PLMPortalHolder, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 540, 310, 170));

        PanelHolder.addTab("tab1", HomePanel);

        ViolationPanel.setBackground(new java.awt.Color(255, 255, 255));
        ViolationPanel.setOpaque(false);
        ViolationPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Dash_Title1.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        Dash_Title1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Dash_Title1.setText("Dashboard");
        ViolationPanel.add(Dash_Title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, -1, 30));

        OOSDAS1.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        OOSDAS1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        OOSDAS1.setText("OFFICE OF STUDENT DEVELOPMENT AND SERVICES");
        ViolationPanel.add(OOSDAS1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 410, 10));

        PLMSeal1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/plmSmallLogo.png"))); // NOI18N
        ViolationPanel.add(PLMSeal1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        TabTitleHolder1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        TabTitleHolder1.setText("Violation Record");
        ViolationPanel.add(TabTitleHolder1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, -1));

        SYholder.setText("Current School Year :");
        ViolationPanel.add(SYholder, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, -1));

        SEMESTERholder.setText("Current Semester :");
        ViolationPanel.add(SEMESTERholder, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        panelBorder1.setBackground(new java.awt.Color(235, 235, 235));
        panelBorder1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelBorder3.setBackground(new java.awt.Color(122, 0, 0));

        javax.swing.GroupLayout panelBorder3Layout = new javax.swing.GroupLayout(panelBorder3);
        panelBorder3.setLayout(panelBorder3Layout);
        panelBorder3Layout.setHorizontalGroup(
            panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 950, Short.MAX_VALUE)
        );
        panelBorder3Layout.setVerticalGroup(
            panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        panelBorder1.add(panelBorder3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 30));

        ViolationPanel.add(panelBorder1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 950, 460));

        EditButton.setBackground(new java.awt.Color(122, 0, 0));
        EditButton.setForeground(new java.awt.Color(255, 255, 255));
        EditButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/pencilwhite 5x5.png"))); // NOI18N
        EditButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        EditButton.setFocusPainted(false);
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });
        ViolationPanel.add(EditButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 170, 40, 40));

        AddRecordButton.setForeground(new java.awt.Color(255, 255, 255));
        AddRecordButton.setText("Add Record");
        AddRecordButton.setRadius(15);
        AddRecordButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddRecordButtonMouseClicked(evt);
            }
        });
        AddRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddRecordButtonActionPerformed(evt);
            }
        });
        ViolationPanel.add(AddRecordButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 700, 100, 30));

        PanelHolder.addTab("tab2", ViolationPanel);

        DatabasePanel.setBackground(new java.awt.Color(255, 255, 255));
        DatabasePanel.setOpaque(false);
        DatabasePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Dash_Title2.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        Dash_Title2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Dash_Title2.setText("Dashboard");
        DatabasePanel.add(Dash_Title2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, -1, 30));

        OOSDAS2.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        OOSDAS2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        OOSDAS2.setText("OFFICE OF STUDENT DEVELOPMENT AND SERVICES");
        DatabasePanel.add(OOSDAS2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 410, 10));

        PLMSeal2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/plmSmallLogo.png"))); // NOI18N
        DatabasePanel.add(PLMSeal2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        TabTitleHolder2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        TabTitleHolder2.setText("OSDS Database");
        DatabasePanel.add(TabTitleHolder2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, -1));

        SYholder1.setText("Current School Year :");
        DatabasePanel.add(SYholder1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, -1));

        SEMESTERholder1.setText("Current Semester :");
        DatabasePanel.add(SEMESTERholder1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        panelBorder2.setBackground(new java.awt.Color(235, 235, 235));

        DimensionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        DimensionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DimensionTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(DimensionTable);

        javax.swing.GroupLayout panelBorder2Layout = new javax.swing.GroupLayout(panelBorder2);
        panelBorder2.setLayout(panelBorder2Layout);
        panelBorder2Layout.setHorizontalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelBorder2Layout.setVerticalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        DatabasePanel.add(panelBorder2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 610, 410));

        DimensionTableSelector.setBackground(new java.awt.Color(122, 0, 0));
        DimensionTableSelector.setForeground(new java.awt.Color(255, 255, 255));
        DimensionTableSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Data Table", "Item 1", "Item 2", "Item 3", "Item 4" }));
        DatabasePanel.add(DimensionTableSelector, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 130, -1));

        TitleField.setText("Selected Table : ");
        DatabasePanel.add(TitleField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, -1, -1));

        selectedTableField.setBackground(new java.awt.Color(235, 235, 235));
        selectedTableField.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 10, 2, 10));
        selectedTableField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectedTableFieldActionPerformed(evt);
            }
        });
        DatabasePanel.add(selectedTableField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, 110, -1));

        dimensionEditButton.setForeground(new java.awt.Color(255, 255, 255));
        dimensionEditButton.setText("Edit Record");
        dimensionEditButton.setRadius(15);
        dimensionEditButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dimensionEditButtonMouseClicked(evt);
            }
        });
        DatabasePanel.add(dimensionEditButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 710, 100, 30));

        dimensionAddButton.setForeground(new java.awt.Color(255, 255, 255));
        dimensionAddButton.setText("Add Record");
        dimensionAddButton.setRadius(15);
        dimensionAddButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dimensionAddButtonMouseClicked(evt);
            }
        });
        DatabasePanel.add(dimensionAddButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 250, 100, 30));

        dimensionDeleteButton.setForeground(new java.awt.Color(255, 255, 255));
        dimensionDeleteButton.setText("Delete Record");
        dimensionDeleteButton.setRadius(15);
        dimensionDeleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dimensionDeleteButtonMouseClicked(evt);
            }
        });
        DatabasePanel.add(dimensionDeleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 710, 110, 30));

        panelBorder4.setBackground(new java.awt.Color(235, 235, 235));

        jLayeredPane1.setPreferredSize(new java.awt.Dimension(370, 410));
        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        defaultPanel.setPreferredSize(new java.awt.Dimension(370, 410));

        javax.swing.GroupLayout defaultPanelLayout = new javax.swing.GroupLayout(defaultPanel);
        defaultPanel.setLayout(defaultPanelLayout);
        defaultPanelLayout.setHorizontalGroup(
            defaultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );
        defaultPanelLayout.setVerticalGroup(
            defaultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
        );

        jLayeredPane1.add(defaultPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        editStudentPanel.setPreferredSize(new java.awt.Dimension(370, 410));

        lblStudentNo.setText("Student No");

        txtStudentNo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        lblLastname.setText("Lastname");

        lblFirstname.setText("Firstname");

        lblEmail.setText("Email");

        lblGender.setText("Gender");

        lblCpNum.setText("Cellphone No");

        lblAddress.setText("Address");

        lblBirthday.setText("Birthday");

        lblStatus.setText("Status");

        jLabel19.setText("Course Code");

        jLabel20.setText("Date Opened");

        jLabel21.setText("Date Closed");

        cmbEditStudentGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        cmbEditStudentStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));

        javax.swing.GroupLayout editStudentPanelLayout = new javax.swing.GroupLayout(editStudentPanel);
        editStudentPanel.setLayout(editStudentPanelLayout);
        editStudentPanelLayout.setHorizontalGroup(
            editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editStudentPanelLayout.createSequentialGroup()
                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblStatus)
                    .addComponent(lblBirthday)
                    .addComponent(lblAddress)
                    .addComponent(lblCpNum)
                    .addComponent(lblGender)
                    .addComponent(lblEmail)
                    .addComponent(lblFirstname)
                    .addComponent(lblLastname)
                    .addComponent(lblStudentNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtStudentNo, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                        .addComponent(txtLastname))
                    .addGroup(editStudentPanelLayout.createSequentialGroup()
                        .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtBirthday, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddress, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCpNum, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel20)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtDateClosed, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDateOpened, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCourseCode, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtFirstname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                        .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(cmbEditStudentGender, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbEditStudentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        editStudentPanelLayout.setVerticalGroup(
            editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editStudentPanelLayout.createSequentialGroup()
                .addContainerGap(71, Short.MAX_VALUE)
                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStudentNo)
                    .addComponent(txtStudentNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastname)
                    .addComponent(txtLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstname)
                    .addComponent(txtFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender)
                    .addComponent(cmbEditStudentGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editStudentPanelLayout.createSequentialGroup()
                        .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCpNum)
                            .addComponent(txtCpNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBirthday)
                            .addComponent(txtBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStatus)
                            .addComponent(cmbEditStudentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(editStudentPanelLayout.createSequentialGroup()
                        .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(txtCourseCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(txtDateOpened, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(txtDateClosed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(55, 55, 55))
        );

        jLayeredPane1.add(editStudentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, -1));

        editCoursePanel.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        editCoursePanel.setPreferredSize(new java.awt.Dimension(370, 410));

        lblCourseCode.setText("Course Code");

        lblDateOpenedCourse.setText("Date Opened");

        lblDateClosedCourse.setText("Date Closed");

        lblCourseDescription.setText("Description");

        lblCollegeCodeFK.setText("College Code");

        lblCourseStatus.setText("Status");

        cmbEditCourseStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));

        javax.swing.GroupLayout editCoursePanelLayout = new javax.swing.GroupLayout(editCoursePanel);
        editCoursePanel.setLayout(editCoursePanelLayout);
        editCoursePanelLayout.setHorizontalGroup(
            editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editCoursePanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCollegeCodeFK)
                    .addComponent(lblCourseDescription)
                    .addComponent(lblDateClosedCourse)
                    .addComponent(lblDateOpenedCourse)
                    .addComponent(lblCourseCode)
                    .addComponent(lblCourseStatus))
                .addGap(18, 18, 18)
                .addGroup(editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editCoursePanelLayout.createSequentialGroup()
                        .addGroup(editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEditDateClosed)
                            .addComponent(txtCollegeCodeFK)
                            .addComponent(txtEditCourseCode)
                            .addComponent(txtEditDateOpened)
                            .addGroup(editCoursePanelLayout.createSequentialGroup()
                                .addComponent(cmbEditCourseStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 31, Short.MAX_VALUE)))
                        .addGap(162, 162, 162))
                    .addGroup(editCoursePanelLayout.createSequentialGroup()
                        .addComponent(txtEditCourseDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        editCoursePanelLayout.setVerticalGroup(
            editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editCoursePanelLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourseCode)
                    .addComponent(txtEditCourseCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateOpenedCourse)
                    .addComponent(txtEditDateOpened, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateClosedCourse)
                    .addComponent(txtEditDateClosed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourseDescription)
                    .addComponent(txtEditCourseDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCollegeCodeFK)
                    .addComponent(txtCollegeCodeFK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourseStatus)
                    .addComponent(cmbEditCourseStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(99, Short.MAX_VALUE))
        );

        jLayeredPane1.add(editCoursePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 400));

        editCollegePanel.setMinimumSize(new java.awt.Dimension(370, 410));

        lblCollegeCode.setText("CollegeCode");

        lblCollegeDescription.setText("Description");

        lblCollegeDateOpened.setText("Date Opened");

        jLabel18.setText("Date Closed");

        lblCollegeStatus.setText("Status");

        cmbEditCollegeStatusSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));

        javax.swing.GroupLayout editCollegePanelLayout = new javax.swing.GroupLayout(editCollegePanel);
        editCollegePanel.setLayout(editCollegePanelLayout);
        editCollegePanelLayout.setHorizontalGroup(
            editCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editCollegePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblCollegeCode)
                        .addComponent(lblCollegeDescription)
                        .addComponent(lblCollegeDateOpened)
                        .addComponent(jLabel18))
                    .addGroup(editCollegePanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(lblCollegeStatus)))
                .addGroup(editCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editCollegePanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(editCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEditCollegeCode, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEditCollegeDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEditCollegeDateOpened, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(editCollegePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbEditCollegeStatusSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(editCollegePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtEditCollegeDateClosed, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        editCollegePanelLayout.setVerticalGroup(
            editCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editCollegePanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(editCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCollegeCode)
                    .addComponent(txtEditCollegeCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(editCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCollegeDescription)
                    .addComponent(txtEditCollegeDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCollegeDateOpened)
                    .addComponent(txtEditCollegeDateOpened, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtEditCollegeDateClosed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCollegeStatus)
                    .addComponent(cmbEditCollegeStatusSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(149, Short.MAX_VALUE))
        );

        jLayeredPane1.add(editCollegePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        editEmployeePanel.setMinimumSize(new java.awt.Dimension(370, 410));

        jLabel15.setText("Employee ID");

        lblEditEmployeeLastname.setText("Lastname");

        lblEditEmployeeFirstname.setText("Firstname");

        lblEditEmployeeEmail.setText("Email");

        jLabel23.setText("Cellphone No");

        jLabel24.setText("Address");

        jLabel25.setText("Birthday");

        lblEditEmployeeGender.setText("Gender");

        jLabel27.setText("Status");

        cmbEditEmployeeStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));

        cmbEditEmployeeGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        javax.swing.GroupLayout editEmployeePanelLayout = new javax.swing.GroupLayout(editEmployeePanel);
        editEmployeePanel.setLayout(editEmployeePanelLayout);
        editEmployeePanelLayout.setHorizontalGroup(
            editEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editEmployeePanelLayout.createSequentialGroup()
                .addGroup(editEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editEmployeePanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(lblEditEmployeeGender)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbEditEmployeeGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(editEmployeePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(editEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, editEmployeePanelLayout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEditEmployeeCpNum, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, editEmployeePanelLayout.createSequentialGroup()
                                .addGroup(editEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblEditEmployeeEmail)
                                    .addComponent(lblEditEmployeeFirstname)
                                    .addComponent(lblEditEmployeeLastname)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(editEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtEditEmployeeFirstname, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEditEmployeeLastname, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEditEmployeeEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                                    .addComponent(txtEditEmployeeID, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addGap(35, 35, 35)
                        .addGroup(editEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(editEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbEditEmployeeStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(editEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtEditEmployeeBirthday, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                                .addComponent(txtEditEmployeeAddress, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        editEmployeePanelLayout.setVerticalGroup(
            editEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editEmployeePanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(editEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtEditEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEditEmployeeLastname)
                    .addComponent(jLabel24)
                    .addComponent(txtEditEmployeeAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEditEmployeeLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEditEmployeeFirstname)
                    .addComponent(jLabel25)
                    .addComponent(txtEditEmployeeBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEditEmployeeFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEditEmployeeEmail)
                    .addComponent(txtEditEmployeeEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(cmbEditEmployeeStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(txtEditEmployeeCpNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(editEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEditEmployeeGender)
                    .addComponent(cmbEditEmployeeGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(187, Short.MAX_VALUE))
        );

        jLayeredPane1.add(editEmployeePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        editViolationPanel.setPreferredSize(new java.awt.Dimension(370, 410));

        lblEditViolationCode.setText("Violation Code");

        lblEditViolationDescription.setText("Description");

        lblSeverityCode.setText("Severity Code");

        lblEditViolationStatus.setText("Status");

        cmbEditViolationStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));

        javax.swing.GroupLayout editViolationPanelLayout = new javax.swing.GroupLayout(editViolationPanel);
        editViolationPanel.setLayout(editViolationPanelLayout);
        editViolationPanelLayout.setHorizontalGroup(
            editViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editViolationPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(editViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblEditViolationCode)
                    .addComponent(lblEditViolationDescription)
                    .addComponent(lblSeverityCode)
                    .addComponent(lblEditViolationStatus))
                .addGap(18, 18, 18)
                .addGroup(editViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEditViolationDescription)
                    .addComponent(txtEditViolationCode)
                    .addComponent(txtEditSeverityCodeFK)
                    .addComponent(cmbEditViolationStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        editViolationPanelLayout.setVerticalGroup(
            editViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editViolationPanelLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(editViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEditViolationCode)
                    .addComponent(txtEditViolationCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEditViolationDescription)
                    .addComponent(txtEditViolationDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSeverityCode)
                    .addComponent(txtEditSeverityCodeFK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEditViolationStatus)
                    .addComponent(cmbEditViolationStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(198, Short.MAX_VALUE))
        );

        jLayeredPane1.add(editViolationPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        editSeverityPanel.setPreferredSize(new java.awt.Dimension(370, 410));

        lblEditSeverityCode.setText("Severity Code");

        lblEditSeverityDescription.setText("Description");

        javax.swing.GroupLayout editSeverityPanelLayout = new javax.swing.GroupLayout(editSeverityPanel);
        editSeverityPanel.setLayout(editSeverityPanelLayout);
        editSeverityPanelLayout.setHorizontalGroup(
            editSeverityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editSeverityPanelLayout.createSequentialGroup()
                .addGroup(editSeverityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editSeverityPanelLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(lblEditSeverityCode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtEditSeverityCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(editSeverityPanelLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(lblEditSeverityDescription)
                        .addGap(18, 18, 18)
                        .addComponent(txtEditSeverityDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        editSeverityPanelLayout.setVerticalGroup(
            editSeverityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editSeverityPanelLayout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(editSeverityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEditSeverityCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEditSeverityCode))
                .addGap(18, 18, 18)
                .addGroup(editSeverityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEditSeverityDescription)
                    .addComponent(txtEditSeverityDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(241, Short.MAX_VALUE))
        );

        jLayeredPane1.add(editSeverityPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        editSemesterPanel.setPreferredSize(new java.awt.Dimension(370, 410));

        lblEditSemester.setText("Semester");

        javax.swing.GroupLayout editSemesterPanelLayout = new javax.swing.GroupLayout(editSemesterPanel);
        editSemesterPanel.setLayout(editSemesterPanelLayout);
        editSemesterPanelLayout.setHorizontalGroup(
            editSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editSemesterPanelLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(lblEditSemester)
                .addGap(18, 18, 18)
                .addComponent(txtEditSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(158, Short.MAX_VALUE))
        );
        editSemesterPanelLayout.setVerticalGroup(
            editSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editSemesterPanelLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(editSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEditSemester)
                    .addComponent(txtEditSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(258, Short.MAX_VALUE))
        );

        jLayeredPane1.add(editSemesterPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        editSchoolYearPanel.setMinimumSize(new java.awt.Dimension(370, 410));

        lblSchoolYear.setText("School Year");

        txtEditSchoolYear.setText("jTextField14");

        javax.swing.GroupLayout editSchoolYearPanelLayout = new javax.swing.GroupLayout(editSchoolYearPanel);
        editSchoolYearPanel.setLayout(editSchoolYearPanelLayout);
        editSchoolYearPanelLayout.setHorizontalGroup(
            editSchoolYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editSchoolYearPanelLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(lblSchoolYear)
                .addGap(18, 18, 18)
                .addComponent(txtEditSchoolYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(135, Short.MAX_VALUE))
        );
        editSchoolYearPanelLayout.setVerticalGroup(
            editSchoolYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editSchoolYearPanelLayout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addGroup(editSchoolYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSchoolYear)
                    .addComponent(txtEditSchoolYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(254, Short.MAX_VALUE))
        );

        jLayeredPane1.add(editSchoolYearPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        addStudentPanel.setPreferredSize(new java.awt.Dimension(370, 410));

        lblAddCpNum.setText("Cellphone No");

        lblAddAddress.setText("Address");

        lblAddStudentNo.setText("Student No");

        cmbAddStudentGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        txtAddStudentNo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        cmbAddStudentStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));

        lblAddLastname.setText("Lastname");

        lblAddBirthday.setText("Birthday");

        lblAddFirstname.setText("Firstname");

        lblAddStatus.setText("Status");

        lblAddEmail.setText("Email");

        lblAddCourseCode.setText("Course Code");

        lblAddDateOpened.setText("Date Opened");

        lblAddDateClosed.setText("Date Closed");

        lbAddlGender.setText("Gender");

        cmbAddStudentCourseCode.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmbAddStudentCourseCodePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        javax.swing.GroupLayout addStudentPanelLayout = new javax.swing.GroupLayout(addStudentPanel);
        addStudentPanel.setLayout(addStudentPanelLayout);
        addStudentPanelLayout.setHorizontalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblAddStatus)
                    .addComponent(lblAddBirthday)
                    .addComponent(lblAddAddress)
                    .addComponent(lblAddCpNum)
                    .addComponent(lbAddlGender)
                    .addComponent(lblAddEmail)
                    .addComponent(lblAddFirstname)
                    .addComponent(lblAddLastname)
                    .addComponent(lblAddStudentNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtAddStudentNo, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                        .addComponent(txtAddStudentLastname))
                    .addGroup(addStudentPanelLayout.createSequentialGroup()
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtAddStudentBirthday, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddStudentAddress, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddStudentCpNum, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAddDateClosed)
                            .addComponent(lblAddDateOpened)
                            .addComponent(lblAddCourseCode))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtAddCourseDateClosedFK, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddCourseDateOpenedFK, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbAddStudentCourseCode, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtAddStudentFirstname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                        .addComponent(txtAddStudentEmail, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(cmbAddStudentGender, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbAddStudentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 1, Short.MAX_VALUE))
        );
        addStudentPanelLayout.setVerticalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addStudentPanelLayout.createSequentialGroup()
                .addContainerGap(71, Short.MAX_VALUE)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddStudentNo)
                    .addComponent(txtAddStudentNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddLastname)
                    .addComponent(txtAddStudentLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddFirstname)
                    .addComponent(txtAddStudentFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddEmail)
                    .addComponent(txtAddStudentEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbAddlGender)
                    .addComponent(cmbAddStudentGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addStudentPanelLayout.createSequentialGroup()
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddCpNum)
                            .addComponent(txtAddStudentCpNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAddStudentAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddBirthday)
                            .addComponent(txtAddStudentBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddStatus)
                            .addComponent(cmbAddStudentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addStudentPanelLayout.createSequentialGroup()
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddCourseCode)
                            .addComponent(cmbAddStudentCourseCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddDateOpened)
                            .addComponent(txtAddCourseDateOpenedFK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddDateClosed)
                            .addComponent(txtAddCourseDateClosedFK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(55, 55, 55))
        );

        jLayeredPane1.add(addStudentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        addCollegePanel.setPreferredSize(new java.awt.Dimension(370, 410));

        lblCollegeDescription1.setText("Description");

        lblCollegeDateOpened1.setText("Date Opened");

        jLabel22.setText("Date Closed");

        lblCollegeStatus1.setText("Status");

        cmbAddCollegeStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));

        lblCollegeCode1.setText("CollegeCode");

        javax.swing.GroupLayout addCollegePanelLayout = new javax.swing.GroupLayout(addCollegePanel);
        addCollegePanel.setLayout(addCollegePanelLayout);
        addCollegePanelLayout.setHorizontalGroup(
            addCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCollegePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblCollegeCode1)
                        .addComponent(lblCollegeDescription1)
                        .addComponent(lblCollegeDateOpened1)
                        .addComponent(jLabel22))
                    .addGroup(addCollegePanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(lblCollegeStatus1)))
                .addGroup(addCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addCollegePanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(addCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddCollegeCode, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddCollegeDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddCollegeDateOpened, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addCollegePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbAddCollegeStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addCollegePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAddCollegeDateClosed, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        addCollegePanelLayout.setVerticalGroup(
            addCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCollegePanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(addCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCollegeCode1)
                    .addComponent(txtAddCollegeCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(addCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCollegeDescription1)
                    .addComponent(txtAddCollegeDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCollegeDateOpened1)
                    .addComponent(txtAddCollegeDateOpened, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtAddCollegeDateClosed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addCollegePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCollegeStatus1)
                    .addComponent(cmbAddCollegeStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(149, Short.MAX_VALUE))
        );

        jLayeredPane1.add(addCollegePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        addCoursePanel.setPreferredSize(new java.awt.Dimension(370, 410));

        lblDateOpenedCourse1.setText("Date Opened");

        lblDateClosedCourse1.setText("Date Closed");

        lblCourseDescription1.setText("Description");

        lblCollegeCodeFK1.setText("College Code");

        lblCourseStatus1.setText("Status");

        lblCourseCode1.setText("Course Code");

        cmbAddCourseStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));

        cmbAddCollegeCodeFK.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmbAddCollegeCodeFKPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel16.setText("College Date Opened");

        jLabel17.setText("College Date Closed");

        javax.swing.GroupLayout addCoursePanelLayout = new javax.swing.GroupLayout(addCoursePanel);
        addCoursePanel.setLayout(addCoursePanelLayout);
        addCoursePanelLayout.setHorizontalGroup(
            addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addCoursePanelLayout.createSequentialGroup()
                        .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCourseDescription1)
                            .addComponent(lblDateClosedCourse1)
                            .addComponent(lblDateOpenedCourse1)
                            .addComponent(lblCourseCode1))
                        .addGap(18, 18, 18)
                        .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addCoursePanelLayout.createSequentialGroup()
                                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAddCourseDateClosed, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                                    .addComponent(txtAddCourseCode)
                                    .addComponent(txtAddCourseDateOpened))
                                .addGap(38, 38, 38))
                            .addComponent(txtAddCourseDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addCoursePanelLayout.createSequentialGroup()
                        .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addCoursePanelLayout.createSequentialGroup()
                                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17))
                                .addGap(18, 18, 18)
                                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtAddCollegeDateClosedFK, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                    .addComponent(txtAddCollegeDateOpenedFK)))
                            .addGroup(addCoursePanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(addCoursePanelLayout.createSequentialGroup()
                                        .addComponent(lblCollegeCodeFK1)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbAddCollegeCodeFK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(addCoursePanelLayout.createSequentialGroup()
                                        .addComponent(lblCourseStatus1)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbAddCourseStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        addCoursePanelLayout.setVerticalGroup(
            addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCoursePanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourseCode1)
                    .addComponent(txtAddCourseCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateOpenedCourse1)
                    .addComponent(txtAddCourseDateOpened, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateClosedCourse1)
                    .addComponent(txtAddCourseDateClosed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourseDescription1)
                    .addComponent(txtAddCourseDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourseStatus1)
                    .addComponent(cmbAddCourseStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCollegeCodeFK1)
                    .addComponent(cmbAddCollegeCodeFK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtAddCollegeDateOpenedFK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtAddCollegeDateClosedFK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        jLayeredPane1.add(addCoursePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        addEmployeePanel.setPreferredSize(new java.awt.Dimension(370, 410));

        lblAddEmployeeCpNum.setText("Cellphone No");

        lblAddEmployeeAddress.setText("Address");

        lblAddEmployeeID.setText("Employee ID");

        lblAddEmployeeBirthday.setText("Birthday");

        lblAddEmployeeLastname.setText("Lastname");

        lblAddEmployeeGender.setText("Gender");

        lblAddEmployeeFirstname.setText("Firstname");

        lblAddEmployeeStatus.setText("Status");

        cmbAddEmployeeStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));

        lblAddEmployeeEmail.setText("Email");

        cmbAddEmployeeGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        javax.swing.GroupLayout addEmployeePanelLayout = new javax.swing.GroupLayout(addEmployeePanel);
        addEmployeePanel.setLayout(addEmployeePanelLayout);
        addEmployeePanelLayout.setHorizontalGroup(
            addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addEmployeePanelLayout.createSequentialGroup()
                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addEmployeePanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(lblAddEmployeeGender)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbAddEmployeeGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addEmployeePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addEmployeePanelLayout.createSequentialGroup()
                                .addComponent(lblAddEmployeeCpNum)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAddEmployeeCpNum, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addEmployeePanelLayout.createSequentialGroup()
                                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblAddEmployeeEmail)
                                    .addComponent(lblAddEmployeeFirstname)
                                    .addComponent(lblAddEmployeeLastname)
                                    .addComponent(lblAddEmployeeID))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtAddEmployeeFirstname, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAddEmployeeLastname, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAddEmployeeEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                                    .addComponent(txtAddEmployeeID, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addGap(35, 35, 35)
                        .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAddEmployeeAddress, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAddEmployeeBirthday, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAddEmployeeStatus, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbAddEmployeeStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtAddEmployeeBirthday, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                                .addComponent(txtAddEmployeeAddress, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addEmployeePanelLayout.setVerticalGroup(
            addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addEmployeePanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddEmployeeID)
                    .addComponent(txtAddEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddEmployeeLastname)
                    .addComponent(lblAddEmployeeAddress)
                    .addComponent(txtAddEmployeeAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddEmployeeLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddEmployeeFirstname)
                    .addComponent(lblAddEmployeeBirthday)
                    .addComponent(txtAddEmployeeBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddEmployeeFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddEmployeeEmail)
                    .addComponent(txtAddEmployeeEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddEmployeeStatus)
                    .addComponent(cmbAddEmployeeStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddEmployeeCpNum)
                    .addComponent(txtAddEmployeeCpNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddEmployeeGender)
                    .addComponent(cmbAddEmployeeGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(187, Short.MAX_VALUE))
        );

        jLayeredPane1.add(addEmployeePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        addViolationPanel.setMinimumSize(new java.awt.Dimension(370, 410));

        lbllAddViolationStatus.setText("Status");

        cmbAddViolationStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));

        lblAddViolationCode.setText("Violation Code");

        lblAddViolationDescription.setText("Description");

        lblAddSeverityCodeFK.setText("Severity Code");

        javax.swing.GroupLayout addViolationPanelLayout = new javax.swing.GroupLayout(addViolationPanel);
        addViolationPanel.setLayout(addViolationPanelLayout);
        addViolationPanelLayout.setHorizontalGroup(
            addViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addViolationPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(addViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblAddViolationCode)
                    .addComponent(lblAddViolationDescription)
                    .addComponent(lblAddSeverityCodeFK)
                    .addComponent(lbllAddViolationStatus))
                .addGap(18, 18, 18)
                .addGroup(addViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtAddViolationDescription)
                        .addComponent(txtAddViolationCode)
                        .addComponent(cmbAddViolationStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(cmbAddSeverityCodeFK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        addViolationPanelLayout.setVerticalGroup(
            addViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addViolationPanelLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(addViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddViolationCode)
                    .addComponent(txtAddViolationCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddViolationDescription)
                    .addComponent(txtAddViolationDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddSeverityCodeFK)
                    .addComponent(cmbAddSeverityCodeFK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addViolationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbllAddViolationStatus)
                    .addComponent(cmbAddViolationStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(198, Short.MAX_VALUE))
        );

        jLayeredPane1.add(addViolationPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        addSeverityPanel.setPreferredSize(new java.awt.Dimension(370, 410));

        lblAddSeverityCode1.setText("Severity Code");

        lblAddSeverityDescription.setText("Description");

        javax.swing.GroupLayout addSeverityPanelLayout = new javax.swing.GroupLayout(addSeverityPanel);
        addSeverityPanel.setLayout(addSeverityPanelLayout);
        addSeverityPanelLayout.setHorizontalGroup(
            addSeverityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSeverityPanelLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(addSeverityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(addSeverityPanelLayout.createSequentialGroup()
                        .addComponent(lblAddSeverityCode1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAddSeverityCode, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addSeverityPanelLayout.createSequentialGroup()
                        .addComponent(lblAddSeverityDescription)
                        .addGap(18, 18, 18)
                        .addComponent(txtAddSeverityDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        addSeverityPanelLayout.setVerticalGroup(
            addSeverityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSeverityPanelLayout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(addSeverityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddSeverityCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddSeverityCode1))
                .addGap(18, 18, 18)
                .addGroup(addSeverityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddSeverityDescription)
                    .addComponent(txtAddSeverityDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(241, Short.MAX_VALUE))
        );

        jLayeredPane1.add(addSeverityPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        addSchoolYearPanel.setPreferredSize(new java.awt.Dimension(370, 410));

        lblAddSchoolYear.setText("School Year");

        javax.swing.GroupLayout addSchoolYearPanelLayout = new javax.swing.GroupLayout(addSchoolYearPanel);
        addSchoolYearPanel.setLayout(addSchoolYearPanelLayout);
        addSchoolYearPanelLayout.setHorizontalGroup(
            addSchoolYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSchoolYearPanelLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(lblAddSchoolYear)
                .addGap(18, 18, 18)
                .addComponent(txtAddSchoolYear, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(106, Short.MAX_VALUE))
        );
        addSchoolYearPanelLayout.setVerticalGroup(
            addSchoolYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSchoolYearPanelLayout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addGroup(addSchoolYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddSchoolYear)
                    .addComponent(txtAddSchoolYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(254, Short.MAX_VALUE))
        );

        jLayeredPane1.add(addSchoolYearPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        addSemesterPanel.setPreferredSize(new java.awt.Dimension(370, 410));

        lblAddSemester.setText("Semester");

        javax.swing.GroupLayout addSemesterPanelLayout = new javax.swing.GroupLayout(addSemesterPanel);
        addSemesterPanel.setLayout(addSemesterPanelLayout);
        addSemesterPanelLayout.setHorizontalGroup(
            addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSemesterPanelLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(lblAddSemester)
                .addGap(18, 18, 18)
                .addComponent(txtAddSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
        );
        addSemesterPanelLayout.setVerticalGroup(
            addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSemesterPanelLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddSemester)
                    .addComponent(txtAddSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(258, Short.MAX_VALUE))
        );

        jLayeredPane1.add(addSemesterPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout panelBorder4Layout = new javax.swing.GroupLayout(panelBorder4);
        panelBorder4.setLayout(panelBorder4Layout);
        panelBorder4Layout.setHorizontalGroup(
            panelBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBorder4Layout.setVerticalGroup(
            panelBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        DatabasePanel.add(panelBorder4, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 290, 380, 410));

        operationLabel.setText("Currently Editing:");
        DatabasePanel.add(operationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 260, -1, -1));

        CancelChangesButton.setForeground(new java.awt.Color(255, 255, 255));
        CancelChangesButton.setText("Cancel Changes");
        CancelChangesButton.setRadius(15);
        CancelChangesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelChangesButtonMouseClicked(evt);
            }
        });
        DatabasePanel.add(CancelChangesButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 710, -1, 30));

        ConfirmChangesButton.setForeground(new java.awt.Color(255, 255, 255));
        ConfirmChangesButton.setText("Confirm Changes");
        ConfirmChangesButton.setRadius(15);
        ConfirmChangesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConfirmChangesButtonMouseClicked(evt);
            }
        });
        DatabasePanel.add(ConfirmChangesButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 710, -1, 30));

        PanelHolder.addTab("tab3", DatabasePanel);

        ProfilePanel.setBackground(new java.awt.Color(255, 255, 255));
        ProfilePanel.setOpaque(false);
        ProfilePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Dash_Title3.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        Dash_Title3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Dash_Title3.setText("OSDS Profile");
        ProfilePanel.add(Dash_Title3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, -1, 30));

        PLMSeal3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/plmSmallLogo.png"))); // NOI18N
        ProfilePanel.add(PLMSeal3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        OOSDAS3.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        OOSDAS3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        OOSDAS3.setText("OFFICE OF STUDENT DEVELOPMENT AND SERVICES");
        ProfilePanel.add(OOSDAS3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 410, 10));

        PersonalInformationPanel.setBackground(new java.awt.Color(235, 235, 235));
        PersonalInformationPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pinfo1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        pinfo1.setText("NAME : ");
        PersonalInformationPanel.add(pinfo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        pinfo2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        pinfo2.setText("PLM EMAIL : ");
        PersonalInformationPanel.add(pinfo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        pinfo3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        pinfo3.setText("USERNAME : ");
        PersonalInformationPanel.add(pinfo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        pinfo4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        pinfo4.setText("GENDER :");
        PersonalInformationPanel.add(pinfo4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, -1, -1));

        pinfo5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        pinfo5.setText("CONTACT NUMBER :");
        PersonalInformationPanel.add(pinfo5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, -1));

        pinfo6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        pinfo6.setText("ADDRESS / RESIDENCE :");
        PersonalInformationPanel.add(pinfo6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, -1));

        pinfo7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        pinfo7.setText("DATE OF BIRTH :");
        PersonalInformationPanel.add(pinfo7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, -1, -1));

        pinfo8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        pinfo8.setText("STATUS :");
        PersonalInformationPanel.add(pinfo8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, -1, -1));

        pinfo9.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        pinfo9.setText("PERSONAL EMAIL : ");
        PersonalInformationPanel.add(pinfo9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        txtUserInfoName.setEditable(false);
        txtUserInfoName.setBackground(new java.awt.Color(235, 235, 235));
        txtUserInfoName.setText("William Doggy");
        txtUserInfoName.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 10, 3, 10));
        PersonalInformationPanel.add(txtUserInfoName, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 280, -1));

        txtStatus.setEditable(false);
        txtStatus.setBackground(new java.awt.Color(235, 235, 235));
        txtStatus.setText("SINGLE");
        txtStatus.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 10, 3, 10));
        PersonalInformationPanel.add(txtStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 270, -1));

        txtPLMEmail.setEditable(false);
        txtPLMEmail.setBackground(new java.awt.Color(235, 235, 235));
        txtPLMEmail.setText("htdman2020@plm.edu.ph");
        txtPLMEmail.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 10, 3, 10));
        txtPLMEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPLMEmailActionPerformed(evt);
            }
        });
        PersonalInformationPanel.add(txtPLMEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 250, -1));

        txtUsername.setEditable(false);
        txtUsername.setBackground(new java.awt.Color(235, 235, 235));
        txtUsername.setText("hatdogboy123");
        txtUsername.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 10, 3, 10));
        txtUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUsernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUsernameFocusLost(evt);
            }
        });
        PersonalInformationPanel.add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 250, -1));

        txtGender.setEditable(false);
        txtGender.setBackground(new java.awt.Color(235, 235, 235));
        txtGender.setText("M");
        txtGender.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 10, 3, 10));
        txtGender.setFocusable(false);
        PersonalInformationPanel.add(txtGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 50, 40, -1));

        txtContactNum.setEditable(false);
        txtContactNum.setBackground(new java.awt.Color(235, 235, 235));
        txtContactNum.setText("09XX-XXX-XXXX");
        txtContactNum.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 10, 3, 10));
        PersonalInformationPanel.add(txtContactNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, 200, -1));

        txtAddress2.setEditable(false);
        txtAddress2.setBackground(new java.awt.Color(235, 235, 235));
        txtAddress2.setText("MANILA, PHILIPPINES");
        txtAddress2.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 10, 3, 10));
        PersonalInformationPanel.add(txtAddress2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, 180, -1));

        txtBday.setEditable(false);
        txtBday.setBackground(new java.awt.Color(235, 235, 235));
        txtBday.setText("OCTOBER 13, 2001");
        txtBday.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 10, 3, 10));
        PersonalInformationPanel.add(txtBday, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 270, 230, -1));

        txtPersonalEmail.setEditable(false);
        txtPersonalEmail.setBackground(new java.awt.Color(235, 235, 235));
        txtPersonalEmail.setText("hotdogman@gmail.com");
        txtPersonalEmail.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 10, 3, 10));
        txtPersonalEmail.setRequestFocusEnabled(false);
        PersonalInformationPanel.add(txtPersonalEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 210, -1));

        Subtitle1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Subtitle1.setForeground(new java.awt.Color(122, 0, 0));
        Subtitle1.setText("CONTACT INFORMATION");
        PersonalInformationPanel.add(Subtitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        Subtitle2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Subtitle2.setForeground(new java.awt.Color(122, 0, 0));
        Subtitle2.setText("PERSONAL INFORMATION");
        PersonalInformationPanel.add(Subtitle2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        ProfilePanel.add(PersonalInformationPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, 540, 350));

        ChangePasswordPanel.setBackground(new java.awt.Color(235, 235, 235));
        ChangePasswordPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Subtitle3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Subtitle3.setForeground(new java.awt.Color(122, 0, 0));
        Subtitle3.setText("PASSWORD MANAGEMENT");
        ChangePasswordPanel.add(Subtitle3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        pass1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        pass1.setText("NEW PASSWORD : ");
        ChangePasswordPanel.add(pass1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        pass2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        pass2.setText("CURRENT PASSWORD : ");
        ChangePasswordPanel.add(pass2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        txtNewPassword.setForeground(new java.awt.Color(153, 153, 153));
        txtNewPassword.setText("Please enter a new Password");
        txtNewPassword.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 10, 3, 10));
        txtNewPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNewPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNewPasswordFocusLost(evt);
            }
        });
        txtNewPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNewPasswordMouseClicked(evt);
            }
        });
        ChangePasswordPanel.add(txtNewPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 220, -1));

        showpass1.setForeground(new java.awt.Color(255, 255, 255));
        showpass1.setText("SHOW");
        showpass1.setBorderColor(new java.awt.Color(235, 235, 235));
        showpass1.setRadius(10);
        showpass1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                showpass1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                showpass1MouseReleased(evt);
            }
        });
        showpass1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showpass1ActionPerformed(evt);
            }
        });
        ChangePasswordPanel.add(showpass1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, -1, -1));

        btnSavePassword.setForeground(new java.awt.Color(255, 255, 255));
        btnSavePassword.setText("SAVE");
        btnSavePassword.setBorderColor(new java.awt.Color(235, 235, 235));
        btnSavePassword.setRadius(10);
        btnSavePassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSavePasswordMouseClicked(evt);
            }
        });
        ChangePasswordPanel.add(btnSavePassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, -1, -1));

        txtCurrentPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCurrentPasswordActionPerformed(evt);
            }
        });
        ChangePasswordPanel.add(txtCurrentPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 190, -1));

        txtCurrentPassword1.setText("jPasswordField1");
        ChangePasswordPanel.add(txtCurrentPassword1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 190, -1));

        ProfilePanel.add(ChangePasswordPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 540, 540, 120));

        PanelHolder.addTab("tab4", ProfilePanel);

        DashboardHolder.add(PanelHolder, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, -40, 1090, 800));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(DashboardHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 1280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(DashboardHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void MenuHolder1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuHolder1MouseEntered
        MenuHolder1.setBackground(hoveredMenuColor);
        
    }//GEN-LAST:event_MenuHolder1MouseEntered

    private void MenuHolder3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuHolder3MouseEntered
        MenuHolder3.setBackground(hoveredMenuColor);
    }//GEN-LAST:event_MenuHolder3MouseEntered

    private void MenuHolder1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuHolder1MouseExited
        MenuHolder1.setBackground(defaultMenuColor);
    }//GEN-LAST:event_MenuHolder1MouseExited

    private void MenuHolder3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuHolder3MouseExited
        MenuHolder3.setBackground(defaultMenuColor);
    }//GEN-LAST:event_MenuHolder3MouseExited

    private void MenuHolder2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuHolder2MouseEntered
        MenuHolder2.setBackground(hoveredMenuColor);
    }//GEN-LAST:event_MenuHolder2MouseEntered

    private void MenuHolder2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuHolder2MouseExited
        MenuHolder2.setBackground(defaultMenuColor);
    }//GEN-LAST:event_MenuHolder2MouseExited

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        PanelHolder.setSelectedIndex(0);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        PanelHolder.setSelectedIndex(1);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        PanelHolder.setSelectedIndex(2);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
        MenuHolder1.setBackground(hoveredMenuColor);
    }//GEN-LAST:event_jLabel1MouseEntered

    private void jLabel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseExited
        MenuHolder2.setBackground(defaultMenuColor);
    }//GEN-LAST:event_jLabel2MouseExited

    private void jLabel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseEntered
        MenuHolder3.setBackground(hoveredMenuColor);
    }//GEN-LAST:event_jLabel3MouseEntered

    private void jLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseExited
        MenuHolder1.setBackground(defaultMenuColor);
    }//GEN-LAST:event_jLabel1MouseExited

    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseEntered
        MenuHolder2.setBackground(hoveredMenuColor);
    }//GEN-LAST:event_jLabel2MouseEntered

    private void jLabel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseExited
        MenuHolder3.setBackground(defaultMenuColor);
    }//GEN-LAST:event_jLabel3MouseExited

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EditButtonActionPerformed

    private void s1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_s1MouseClicked

    private void selectedTableFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectedTableFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectedTableFieldActionPerformed

    private void buttonMaker1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMaker1MouseClicked
        PanelHolder.setSelectedIndex(3);
    }//GEN-LAST:event_buttonMaker1MouseClicked

    private void s1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_s1ActionPerformed

    private void s3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s3ActionPerformed
        setState(OSDSDashBoard.ICONIFIED);
    }//GEN-LAST:event_s3ActionPerformed

    private void MenuHolder1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuHolder1MouseClicked
        PanelHolder.setSelectedIndex(0);
    }//GEN-LAST:event_MenuHolder1MouseClicked

    private void MenuHolder2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuHolder2MouseClicked
        PanelHolder.setSelectedIndex(1);
    }//GEN-LAST:event_MenuHolder2MouseClicked

    private void MenuHolder3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuHolder3MouseClicked
        PanelHolder.setSelectedIndex(2);
    }//GEN-LAST:event_MenuHolder3MouseClicked

    private void AddRecordButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddRecordButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_AddRecordButtonMouseClicked

    private void AddRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddRecordButtonActionPerformed
        PanelDisabler.setVisible(true);
        PanelDisabler.setEnabled(true);
        
        AddRecordPanel.setVisible(true);
        AddRecordPanel.setEnabled(true);
        
    }//GEN-LAST:event_AddRecordButtonActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        conn = ConnectDB.Connect();
        setUserProfile();
        initDropdownAndTable();
         if (selectedTableName == null || selectedTableName.isEmpty()) {
             
            conn = ConnectDB.Connect();
            loadTableNames();

            // Set a default table to display, for example, "Student".
            // Make sure that this table exists in your database.
            String defaultTable = "College"; 
            DimensionTableSelector .setSelectedItem(defaultTable); // Set the selected item to the default table.
            loadTableData(defaultTable); // Load the data for the default table.
            
            defaultPanel.setVisible(true);
            editCoursePanel.setVisible(false);
            editStudentPanel.setVisible(false);
            editCollegePanel.setVisible(false);
            editEmployeePanel.setVisible(false);
            editViolationPanel.setVisible(false);
            editSeverityPanel.setVisible(false);
            editSemesterPanel.setVisible(false);
            editSchoolYearPanel.setVisible(false); 
            
            addStudentPanel.setVisible(false);
            addCollegePanel.setVisible(false);
            addCoursePanel.setVisible(false);
            addEmployeePanel.setVisible(false);
            addViolationPanel.setVisible(false);
            addSeverityPanel.setVisible(false);
            addSchoolYearPanel.setVisible(false);
            addSemesterPanel.setVisible(false);
            
         } else {
        // Refresh the data of the currently selected table
            loadTableData(selectedTableName);
        }  
    }//GEN-LAST:event_formWindowActivated

    // EDIT Button
    private void dimensionEditButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dimensionEditButtonMouseClicked
        // TODO add your handling code here:
        
        int selectedRow = DimensionTable.getSelectedRow();
        selectedTableName = DimensionTableSelector.getSelectedItem().toString();
        prevSelectedRow = selectedRow;
        
        
        if (selectedRow != -1) {
        
            //EDIT STUDENT
            if (selectedTableName.equalsIgnoreCase("Student")) {
                isEdit = true;
                operationLabel.setText("Editing: Student Record");
                txtStudentNo.setEnabled(true);      
                txtLastname.setEnabled(true);
                txtFirstname.setEnabled(true);
                txtEmail.setEnabled(true);
                txtCpNum.setEnabled(true);
                txtAddress.setEnabled(true);
                txtBirthday.setEnabled(true);
                txtCourseCode.setEnabled(true);
                txtDateOpened.setEnabled(true);
                txtDateClosed.setEnabled(true);   
                cmbEditStudentGender.setEnabled(true);
                cmbEditStudentStatus.setEnabled(true);
                
                txtStudentNo.setEditable(false);
                txtCourseCode.setEditable(false);
                txtDateOpened.setEditable(false);
                txtDateClosed.setEditable(false);   
                
                JOptionPane.showMessageDialog(null, "You Can Now Edit Student Record.", "EDIT", JOptionPane.INFORMATION_MESSAGE);
                  
            // COURSE
            } else if (selectedTableName.equalsIgnoreCase("Course")) {
                isEdit = true;
                operationLabel.setText("Editing: Course Record");
                txtEditCourseCode.setEnabled(true);
                txtEditDateOpened.setEnabled(true);
                txtEditDateClosed.setEnabled(true);
                txtEditCourseDescription.setEnabled(true);
                txtCollegeCodeFK.setEnabled(true);
                cmbEditCourseStatus.setEnabled(true);
                txtEditCourseCode.setEditable(false);
                txtEditDateOpened.setEditable(false);
                txtCollegeCodeFK.setEditable(false);
                
                JOptionPane.showMessageDialog(null, "You Can Now Edit Course Record.", "EDIT", JOptionPane.INFORMATION_MESSAGE); 
                
            //COLLEGE
            } else if (selectedTableName.equalsIgnoreCase("College")){
                isEdit = true;
                operationLabel.setText("Editing: College Record");
                txtEditCollegeCode.setEnabled(true);
                txtEditCollegeDescription.setEnabled(true);
                txtEditCollegeDateOpened.setEnabled(true);
                txtEditCollegeDateClosed.setEnabled(true);
                cmbEditCollegeStatusSelector.setEnabled(true);
                txtEditCollegeCode.setEditable(false);
                txtEditCollegeDateOpened.setEditable(false);
                
                JOptionPane.showMessageDialog(null, "You Can Now Edit College Record.", "EDIT", JOptionPane.INFORMATION_MESSAGE);
                    
            //EMPLOYEE
            } else if (selectedTableName.equalsIgnoreCase("Employee")) {
                isEdit = true;
                operationLabel.setText("Editing: Employee Record");
                txtEditEmployeeID.setEnabled(true);
                txtEditEmployeeLastname.setEnabled(true);
                txtEditEmployeeFirstname.setEnabled(true);
                txtEditEmployeeEmail.setEnabled(true);
                txtEditEmployeeCpNum.setEnabled(true);
                txtEditEmployeeAddress.setEnabled(true);
                cmbEditEmployeeGender.setEnabled(true);
                cmbEditEmployeeStatus.setEnabled(true);
                txtEditEmployeeBirthday.setEnabled(true);   
                txtEditEmployeeID.setEditable(false);
                
                JOptionPane.showMessageDialog(null, "You Can Now Edit Employee Record.", "EDIT", JOptionPane.INFORMATION_MESSAGE);
            
            } else if (selectedTableName.equalsIgnoreCase("Violation")) {
                isEdit = true;
                operationLabel.setText("Editing: Violation");
                txtEditViolationCode.setEnabled(true);
                txtEditViolationDescription.setEnabled(true);
                txtEditSeverityCodeFK.setEnabled(true);        
                cmbEditViolationStatus.setEnabled(true);
               
                
                txtEditViolationCode.setEditable(false);
                txtEditSeverityCodeFK.setEditable(false);
                
                JOptionPane.showMessageDialog(null, "You Can Now Edit Violation Record.", "EDIT", JOptionPane.INFORMATION_MESSAGE);
            
            } else if (selectedTableName.equalsIgnoreCase("Severity")) {
                isEdit = true;
                operationLabel.setText("Editing: Severity Record");
                txtEditSeverityCode.setEnabled(true);
                txtEditSeverityDescription.setEnabled(true);
                
                txtEditSeverityCode.setEditable(true);
                JOptionPane.showMessageDialog(null, "You Can Now Edit Severity Record.", "EDIT", JOptionPane.INFORMATION_MESSAGE);
            
            }  else if (selectedTableName.equalsIgnoreCase("SY"))
                    JOptionPane.showMessageDialog(null, "You cannot edit School Year Record.", "EDIT", JOptionPane.INFORMATION_MESSAGE);
               else if (selectedTableName.equalsIgnoreCase("Semester"))
                    JOptionPane.showMessageDialog(null, "You cannot edit Semester Record.", "EDIT", JOptionPane.INFORMATION_MESSAGE);    

        } else 
            JOptionPane.showMessageDialog(null, "You Must Select a Row to Edit Data", "EDIT", JOptionPane.ERROR_MESSAGE);
        
        
        
        
    }//GEN-LAST:event_dimensionEditButtonMouseClicked
    
    // Confirm Button
    private void ConfirmChangesButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConfirmChangesButtonMouseClicked
        // TODO add your handling code here:
        selectedTableName = DimensionTableSelector.getSelectedItem().toString();
        int selectedRow;
        if (isEdit) {
            if (selectedTableName.equalsIgnoreCase("Student" ))
                updateStudentValue();
               else if (selectedTableName.equalsIgnoreCase("Course"))
                    updateCourseValue();
                else if (selectedTableName.equalsIgnoreCase("College"))
                    updateCollegeValue();
                else if (selectedTableName.equalsIgnoreCase("Employee"))
                    updateEmployeeValue();
                else if (selectedTableName.equalsIgnoreCase("Violation"))
                    updateViolationValue();
                else if (selectedTableName.equalsIgnoreCase("Severity"))
                    updateSeverityValue();
        }   
            
        
        else if (isAdd){
            
            if (selectedTableName.equalsIgnoreCase("Student" )) {
                if (operationLabel.getText().equals("Adding: Student Record")){
                    addStudent();
                    updateChosenRow(); 
                    switchPanel(defaultPanel);
                    
                } else 
                    JOptionPane.showMessageDialog(null, "Table Mismatch", "Invalid Action", JOptionPane.WARNING_MESSAGE);
            
            } else if (selectedTableName.equalsIgnoreCase("Course" )){
                if (operationLabel.getText().equals("Adding: Course Record")){
                    addCourse();
                    switchPanel(defaultPanel);
                    updateChosenRow(); 

                } else
                    JOptionPane.showMessageDialog(null, "Table Mismatch", "Invalid Action", JOptionPane.WARNING_MESSAGE);
                    
            } else if (selectedTableName.equalsIgnoreCase("College" )){
                if (operationLabel.getText().equals("Adding: College Record")){    
                    addCollege();
                    switchPanel(defaultPanel);
                    updateChosenRow(); 
                   
                 } else
                    JOptionPane.showMessageDialog(null, "Table Mismatch", "Invalid Action", JOptionPane.WARNING_MESSAGE);
                
            }   else if (selectedTableName.equalsIgnoreCase("Employee" )){
                  if (operationLabel.getText().equals("Adding: Employee Record")){
                    addEmployee();
                    switchPanel(defaultPanel);
                    updateChosenRow(); 
                    
                 } else
                    JOptionPane.showMessageDialog(null, "Table Mismatch", "Invalid Action", JOptionPane.WARNING_MESSAGE);
                  
            }   else if (selectedTableName.equalsIgnoreCase("Violation" ) ){
                    
                    if (operationLabel.getText().equals("Adding: Violation")){
                       addViolation();
                       switchPanel(defaultPanel);
                       updateChosenRow(); 
                         
                    } else
                       JOptionPane.showMessageDialog(null, "Table Mismatch", "Invalid Action", JOptionPane.WARNING_MESSAGE);
                
            }   else if (selectedTableName.equalsIgnoreCase("Severity")){
                    if (operationLabel.getText().equals("Adding: Severity Record")){
                        addSeverity();
                        switchPanel(defaultPanel);
                        updateChosenRow(); 
                        
                    } else 
                        JOptionPane.showMessageDialog(null, "Table Mismatch", "Invalid Action", JOptionPane.WARNING_MESSAGE);
                
            }   else if (selectedTableName.equalsIgnoreCase("SY")){
                    if (operationLabel.getText().equals("Adding: Schoool Year Record")){
                        addSchoolYear();
                        switchPanel(defaultPanel);
                        updateChosenRow(); 
                       
                    } else 
                        JOptionPane.showMessageDialog(null, "Table Mismatch", "Invalid Action", JOptionPane.WARNING_MESSAGE);
                
            }   else if (selectedTableName.equalsIgnoreCase("Semester")){
                    if (operationLabel.getText().equals("Adding: Semester Record")){
                        addSemester();
                        switchPanel(defaultPanel);
                        updateChosenRow(); 
                        
                    } else 
                        JOptionPane.showMessageDialog(null, "Table Mismatch", "Invalid Action", JOptionPane.WARNING_MESSAGE);
            }
                
        }
        else 
            JOptionPane.showMessageDialog(null, "You must select an operation first.", "Invalid Action", JOptionPane.WARNING_MESSAGE);
  
    }//GEN-LAST:event_ConfirmChangesButtonMouseClicked

    private void DimensionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DimensionTableMouseClicked
        // TODO add your handling code here:
        selectedTableName = DimensionTableSelector.getSelectedItem().toString();
        int selectedRow = DimensionTable.getSelectedRow();
        
        if (selectedTableName.equalsIgnoreCase("Student")) {
            showStudentRecord(selectedRow);
            operationLabel.setText("View Only: Student Record");
        } else if (selectedTableName.equalsIgnoreCase("Course")) {
            showCourseRecord(selectedRow);
            operationLabel.setText("View Only: Course Record");
        } else if (selectedTableName.equalsIgnoreCase("College")) {
            showCollegeRecord(selectedRow);
            operationLabel.setText("View Only: College Record");
        } else if (selectedTableName.equalsIgnoreCase("Employee")) {
            showEmployeeRecord(selectedRow);
            operationLabel.setText("View Only: Employee Record");
        } else if (selectedTableName.equalsIgnoreCase("Violation")) {
            showViolationTable(selectedRow);
            operationLabel.setText("View Only: Violation");
        } else if (selectedTableName.equalsIgnoreCase("Severity")) {
            showSeverityTable(selectedRow);
            operationLabel.setText("View Only: Severity Record");
        } else if (selectedTableName.equalsIgnoreCase("SY")) {
            showSchoolYear(selectedRow);
            operationLabel.setText("View Only: School Year Record");
        } else if (selectedTableName.equalsIgnoreCase("Semester")) {
            showSemester(selectedRow);
            operationLabel.setText("View Only: Semester Record");
        }    
    }//GEN-LAST:event_DimensionTableMouseClicked

    private void dimensionAddButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dimensionAddButtonMouseClicked
        // TODO add your handling code here:
        selectedTableName = DimensionTableSelector.getSelectedItem().toString();
        
        if (selectedTableName.equalsIgnoreCase("Student")) {
            isAdd=true;
            operationLabel.setText("Adding: Student Record");
            switchPanel(addStudentPanel);
            fillComboCourse();
        } else if (selectedTableName.equalsIgnoreCase("Course")){
            isAdd=true;
            operationLabel.setText("Adding: Course Record");
            switchPanel(addCoursePanel);
            fillComboCollegeFK();
        } else if(selectedTableName.equalsIgnoreCase("College")) {
            isAdd=true;
            operationLabel.setText("Adding: College Record");
            switchPanel(addCollegePanel);
        } else if(selectedTableName.equalsIgnoreCase("Employee")){
            isAdd=true;
            operationLabel.setText("Adding: Employee Record");
            switchPanel(addEmployeePanel);
            
        } else if(selectedTableName.equalsIgnoreCase("Violation")){
            isAdd=true;
            operationLabel.setText("Adding: Violation");
            switchPanel(addViolationPanel);
            fillSeverityCodeFK();
           
        } else if(selectedTableName.equalsIgnoreCase("Severity")){
            isAdd=true;
            operationLabel.setText("Adding: Severity Record");
            switchPanel(addSeverityPanel);
            
        } else if(selectedTableName.equalsIgnoreCase("SY")){
            isAdd=true;
            operationLabel.setText("Adding: Schoool Year Record");
            switchPanel(addSchoolYearPanel);
           
        } else if(selectedTableName.equalsIgnoreCase("Semester")){
            isAdd=true;
            operationLabel.setText("Adding: Semester Record");
            switchPanel(addSemesterPanel);
            
        } else
            JOptionPane.showMessageDialog(null, "You must select a table first.", "Invalid Action", JOptionPane.WARNING_MESSAGE);
        
    }//GEN-LAST:event_dimensionAddButtonMouseClicked
    
    // ADD Button
    private void cmbAddStudentCourseCodePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbAddStudentCourseCodePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        conn = ConnectDB.Connect();
        String tmp = cmbAddStudentCourseCode.getSelectedItem().toString();
        String query = "SELECT * FROM APP.COURSE WHERE COURSE_CODE=?";
        
        try {
            ps1 = conn.prepareStatement(query);
            ps1.setString(1, tmp);
            rs1=ps1.executeQuery();
            
            if(rs1.next()) {
                String add1 = rs1.getString("DATE_OPENED");
                txtAddCourseDateOpenedFK.setText(add1);
                String add2 = rs1.getString("DATE_CLOSED");
                txtAddCourseDateClosedFK.setText(add2);
            }
            
            
        }  catch (Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_cmbAddStudentCourseCodePopupMenuWillBecomeInvisible

    private void dimensionDeleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dimensionDeleteButtonMouseClicked
        // TODO add your handling code here:
        selectedTableName = DimensionTableSelector.getSelectedItem().toString();
        if (selectedTableName.equalsIgnoreCase("Student")) {
            deleteStudentRecord();
            switchPanel(defaultPanel);
        } else if(selectedTableName.equalsIgnoreCase("Course")){
            deleteCourseRecord();
            switchPanel(defaultPanel);
        } else if(selectedTableName.equalsIgnoreCase("College")){
            deleteCollegeRecord();
            switchPanel(defaultPanel);
        } else if(selectedTableName.equalsIgnoreCase("Employee")){
            deleteEmployeeRecord();
            switchPanel(defaultPanel);
        } else if(selectedTableName.equalsIgnoreCase("Violation")){
            deleteViolation();
            switchPanel(defaultPanel);
        } else if(selectedTableName.equalsIgnoreCase("Severity")){
            deleteSeverity();
            switchPanel(defaultPanel);
        } else if(selectedTableName.equalsIgnoreCase("SY")){
            deleteSchoolYear();
            switchPanel(defaultPanel);
        } else if(selectedTableName.equalsIgnoreCase("Semester")){
            deleteSemester();
            switchPanel(defaultPanel);
        }else
            JOptionPane.showMessageDialog(null, "You must select a row first.", "Invalid Action", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_dimensionDeleteButtonMouseClicked

    private void CancelChangesButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelChangesButtonMouseClicked
        // TODO add your handling code here:
        if (isAdd) 
            reset();
        else if(isEdit)
            showToEdit();
    }//GEN-LAST:event_CancelChangesButtonMouseClicked

    private void cmbAddCollegeCodeFKPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbAddCollegeCodeFKPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        conn = ConnectDB.Connect();
        String tmp = cmbAddCollegeCodeFK.getSelectedItem().toString();
        String query = "SELECT * FROM APP.COLLEGE WHERE COLLEGE_CODE=?";
        
        try {
            ps1 = conn.prepareStatement(query);
            ps1.setString(1, tmp);
            rs1=ps1.executeQuery();
            
            if(rs1.next()) {
                String add1 = rs1.getString("DATE_OPENED");
                txtAddCollegeDateOpenedFK.setText(add1);
                String add2 = rs1.getString("DATE_CLOSED");
                txtAddCollegeDateClosedFK.setText(add2);
            }
            
            
        }  catch (Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_cmbAddCollegeCodeFKPopupMenuWillBecomeInvisible

    private void btnViewViolationsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewViolationsMouseClicked
        LatestViolationsFullWindow.setVisible(true);
        LatestViolationsFullWindow.setEnabled(true);

        PanelDisabler.setVisible(true);
        PanelDisabler.setEnabled(true);

        try{
            ps1 = conn.prepareStatement("SELECT * FROM app.VIOLATION_RECORD ORDER BY DATE_OF_VIOLATION DESC");
            rs1 = ps1.executeQuery();

            LatestViolationsFullWindowTable.setModel(DbUtils.resultSetToTableModel(rs1));
            setTableDataAndResizeColumns();

        }catch (Exception e) {
            JOptionPane.showMessageDialog(null, "An error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnViewViolationsMouseClicked

    private void btnViewViolationsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewViolationsMouseEntered
        btnViewViolations.setBackground(quickAccessHoveredColor);
    }//GEN-LAST:event_btnViewViolationsMouseEntered

    private void btnViewViolationsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewViolationsMouseExited
        btnViewViolations.setBackground(quickAccessDefaultColor);
    }//GEN-LAST:event_btnViewViolationsMouseExited

    private void btnLogoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLogoutButtonMouseClicked
        int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to log out?",
            "Logout Confirmation", JOptionPane.YES_NO_OPTION);

        if (response == JOptionPane.YES_OPTION) {
            dispose();
            OSDSLoginPage lp = new OSDSLoginPage();
            lp.show();
        }

    }//GEN-LAST:event_btnLogoutButtonMouseClicked

    private void btnLogoutButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLogoutButtonMouseEntered
        btnLogoutButton.setBackground(quickAccessHoveredColor);
    }//GEN-LAST:event_btnLogoutButtonMouseEntered

    private void btnLogoutButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLogoutButtonMouseExited
        btnLogoutButton.setBackground(quickAccessDefaultColor);
    }//GEN-LAST:event_btnLogoutButtonMouseExited

    private void btnOutlookButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOutlookButtonMouseClicked
        try {
            // Open the Outlook website in the user's default browser
            java.awt.Desktop.getDesktop().browse(new java.net.URI("https://outlook.live.com/"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error opening Outlook website: " + e.getMessage(),
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnOutlookButtonMouseClicked

    private void btnOutlookButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOutlookButtonMouseEntered
        btnOutlookButton.setBackground(quickAccessHoveredColor);
    }//GEN-LAST:event_btnOutlookButtonMouseEntered

    private void btnOutlookButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOutlookButtonMouseExited
        btnOutlookButton.setBackground(quickAccessDefaultColor);
    }//GEN-LAST:event_btnOutlookButtonMouseExited

    private void btnRecordButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRecordButtonMouseClicked
        PanelHolder.setSelectedIndex(1);
    }//GEN-LAST:event_btnRecordButtonMouseClicked

    private void btnRecordButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRecordButtonMouseEntered
        btnRecordButton.setBackground(quickAccessHoveredColor);
    }//GEN-LAST:event_btnRecordButtonMouseEntered

    private void btnRecordButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRecordButtonMouseExited
        btnRecordButton.setBackground(quickAccessDefaultColor);
    }//GEN-LAST:event_btnRecordButtonMouseExited

    private void btnProfileButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProfileButtonMouseClicked
        PanelHolder.setSelectedIndex(3);
    }//GEN-LAST:event_btnProfileButtonMouseClicked

    private void btnProfileButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProfileButtonMouseEntered
        btnProfileButton.setBackground(quickAccessHoveredColor);
    }//GEN-LAST:event_btnProfileButtonMouseEntered

    private void btnProfileButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProfileButtonMouseExited
        btnProfileButton.setBackground(quickAccessDefaultColor);
    }//GEN-LAST:event_btnProfileButtonMouseExited

    private void redirectButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redirectButton1MouseClicked
        try {

            java.awt.Desktop.getDesktop().browse(new java.net.URI("https://www.plm.edu.ph/news/announcements/admission-for-the-college-of-engineering-graduate-program"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error opening PLM website: " + e.getMessage(),
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_redirectButton1MouseClicked

    private void redirectButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redirectButton1MouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_redirectButton1MouseEntered

    private void redirectButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redirectButton1MouseExited
        setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_redirectButton1MouseExited

    private void AnnHolder1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnnHolder1MouseEntered
        AnnHolder1.setBackground(hoveredMenuColor);
    }//GEN-LAST:event_AnnHolder1MouseEntered

    private void AnnHolder1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnnHolder1MouseExited
        AnnHolder1.setBackground(new Color(215,215,215));
    }//GEN-LAST:event_AnnHolder1MouseExited

    private void redirectButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redirectButton4MouseClicked
        try {

            java.awt.Desktop.getDesktop().browse(new java.net.URI("https://www.plm.edu.ph/news/announcements/advisory-classes-on-november-23-25-2023"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error opening PLM website: " + e.getMessage(),
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_redirectButton4MouseClicked

    private void redirectButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redirectButton4MouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_redirectButton4MouseEntered

    private void redirectButton4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redirectButton4MouseExited
        setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_redirectButton4MouseExited

    private void AnnHolder2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnnHolder2MouseEntered
        AnnHolder2.setBackground(hoveredMenuColor);
    }//GEN-LAST:event_AnnHolder2MouseEntered

    private void AnnHolder2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnnHolder2MouseExited
        AnnHolder2.setBackground(new Color(215,215,215));
    }//GEN-LAST:event_AnnHolder2MouseExited

    private void redirectButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redirectButton3MouseClicked
        try {

            java.awt.Desktop.getDesktop().browse(new java.net.URI("https://www.plm.edu.ph/news/announcements/18-day-campaign-to-end-violence-against-women-vaw"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error opening PLM website: " + e.getMessage(),
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_redirectButton3MouseClicked

    private void redirectButton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redirectButton3MouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_redirectButton3MouseEntered

    private void redirectButton3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redirectButton3MouseExited
        setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_redirectButton3MouseExited

    private void AnnHolder3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnnHolder3MouseEntered
        AnnHolder3.setBackground(hoveredMenuColor);
    }//GEN-LAST:event_AnnHolder3MouseEntered

    private void AnnHolder3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnnHolder3MouseExited
        AnnHolder3.setBackground(new Color(215,215,215));
    }//GEN-LAST:event_AnnHolder3MouseExited

    private void redirectButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redirectButton2MouseClicked
        try {

            java.awt.Desktop.getDesktop().browse(new java.net.URI("https://www.plm.edu.ph/news/announcements/plm-admission-test-plmat-for-sy2024-2025"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error opening PLM website: " + e.getMessage(),
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_redirectButton2MouseClicked

    private void redirectButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redirectButton2MouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_redirectButton2MouseEntered

    private void redirectButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redirectButton2MouseExited
        setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_redirectButton2MouseExited

    private void AnnHolder4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnnHolder4MouseEntered
        AnnHolder4.setBackground(hoveredMenuColor);
    }//GEN-LAST:event_AnnHolder4MouseEntered

    private void AnnHolder4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnnHolder4MouseExited
        AnnHolder4.setBackground(new Color(215,215,215));
    }//GEN-LAST:event_AnnHolder4MouseExited

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        jTextField1.setText("");
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        if(jTextField1.getText().equals("")){
            jTextField1.setText("Search Here");
        }
    }//GEN-LAST:event_jTextField1FocusLost

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked

    }//GEN-LAST:event_jTextField1MouseClicked

    private void jTextField1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseExited

    }//GEN-LAST:event_jTextField1MouseExited

    private void btnQuickSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnQuickSearchMouseClicked
        //        lblCourseCode.setText("");
        try {
            String selectedColumnName = jComboBox1.getSelectedItem().toString();
            String searchText = jTextField1.getText().toLowerCase();

            if (selectedColumnName.equals(" ")) {
                JOptionPane.showMessageDialog(this, "Please choose a column to search.", "Column Not Selected", JOptionPane.WARNING_MESSAGE);
                jTextField1.setText("Search Here");
                return;
            }
            if (selectedColumnName.equals("ALL COLUMNS")) {
                ps1 = conn.prepareStatement("SELECT * FROM app.VIOLATION_RECORD ORDER BY DATE_OF_VIOLATION DESC");
                rs1 = ps1.executeQuery(); // kukunin mga records

                if (!rs1.next()) {
                    JOptionPane.showMessageDialog(this, "No records found.", "No Results", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Displaying all records.", "All Records", JOptionPane.INFORMATION_MESSAGE);
                }
                tblQuickSearchTable.setModel(DbUtils.resultSetToTableModel(rs1));
                jTextField1.setText("Search Here");
                return;
            }
            if (searchText == null || searchText.isEmpty() || searchText.equalsIgnoreCase("Search Here") || searchText.equals("")) {
                JOptionPane.showMessageDialog(this, "Please enter a search term.", "Empty Search", JOptionPane.INFORMATION_MESSAGE);
            } else {
                ps1 = conn.prepareStatement("SELECT * FROM app.VIOLATION_RECORD WHERE LOWER(" + selectedColumnName + ") = ? OR LOWER(" + selectedColumnName + ") LIKE ? ORDER BY SY DESC");
                ps1.setString(1, searchText);
                ps1.setString(2, "%" + searchText + "%");
            }
            rs1 = ps1.executeQuery();
            if (!rs1.next()) {
                JOptionPane.showMessageDialog(this, "No records found matching the search criteria.", "No Results", JOptionPane.INFORMATION_MESSAGE);
            }
            tblQuickSearchTable.setModel(DbUtils.resultSetToTableModel(rs1));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "An error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnQuickSearchMouseClicked

    private void btnQuickSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuickSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnQuickSearchActionPerformed

    private void btnViewQuickSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewQuickSearchMouseClicked
        LatestViolationsFullWindow.setVisible(true);
        LatestViolationsFullWindow.setEnabled(true);

        PanelDisabler.setVisible(true);
        PanelDisabler.setEnabled(true);

        String selectedColumnName = jComboBox1.getSelectedItem().toString();
        String searchText = jTextField1.getText().toLowerCase();

        try{
            ps1 = conn.prepareStatement("SELECT * FROM app.VIOLATION_RECORD WHERE LOWER(" + selectedColumnName + ") = ? OR LOWER(" + selectedColumnName + ") LIKE ? ORDER BY SY DESC");
            ps1.setString(1, searchText);
            ps1.setString(2, "%" + searchText + "%");
            rs1 = ps1.executeQuery();

            LatestViolationsFullWindowTable.setModel(tblQuickSearchTable.getModel());
            setTableDataAndResizeColumns();
        }catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnViewQuickSearchMouseClicked

    private void btnViewQuickSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewQuickSearchMouseEntered
        btnViewQuickSearch.setBackground(quickAccessHoveredColor);
    }//GEN-LAST:event_btnViewQuickSearchMouseEntered

    private void btnViewQuickSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewQuickSearchMouseExited
        btnViewQuickSearch.setBackground(quickAccessHoveredColor);
    }//GEN-LAST:event_btnViewQuickSearchMouseExited

    private void btnFacebookPageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFacebookPageMouseClicked
        try {
            // Open the Outlook website in the user's default browser
            java.awt.Desktop.getDesktop().browse(new java.net.URI("https://www.facebook.com/PLM.Haribon"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error opening PLM facebook page: " + e.getMessage(),
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnFacebookPageMouseClicked

    private void btnOfficialWebsiteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOfficialWebsiteMouseClicked
        try {
            // Open the Outlook website in the user's default browser
            java.awt.Desktop.getDesktop().browse(new java.net.URI("https://www.plm.edu.ph/"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error opening PLM website: " + e.getMessage(),
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnOfficialWebsiteMouseClicked

    private void btnOfficialWebsiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOfficialWebsiteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOfficialWebsiteActionPerformed

    private void btnTeamsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTeamsMouseClicked
        try {
            // Open the Outlook website in the user's default browser
            java.awt.Desktop.getDesktop().browse(new java.net.URI("https://www.microsoft.com/en-us/microsoft-teams/log-in"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error opening MS Teams website: " + e.getMessage(),
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnTeamsMouseClicked

    private void btnViolationsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViolationsButtonMouseClicked
        LatestViolationsFullWindow.setVisible(false);
        LatestViolationsFullWindow.setEnabled(false);

        PanelDisabler.setVisible(false);
        PanelDisabler.setEnabled(false);
    }//GEN-LAST:event_btnViolationsButtonMouseClicked

    private void txtPLMEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPLMEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPLMEmailActionPerformed

    private void txtUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsernameFocusGained

    }//GEN-LAST:event_txtUsernameFocusGained

    private void txtUsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsernameFocusLost

    }//GEN-LAST:event_txtUsernameFocusLost

    private void txtNewPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNewPasswordFocusGained
        txtNewPassword.setText("");
    }//GEN-LAST:event_txtNewPasswordFocusGained

    private void txtNewPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNewPasswordFocusLost

    }//GEN-LAST:event_txtNewPasswordFocusLost

    private void txtNewPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNewPasswordMouseClicked

    }//GEN-LAST:event_txtNewPasswordMouseClicked

    private void showpass1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showpass1MousePressed

        txtCurrentPassword.setEchoChar((char) 0);
    }//GEN-LAST:event_showpass1MousePressed

    private void showpass1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showpass1MouseReleased

        txtCurrentPassword.setEchoChar('*');
    }//GEN-LAST:event_showpass1MouseReleased

    private void showpass1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showpass1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showpass1ActionPerformed

    private void btnSavePasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSavePasswordMouseClicked
        try {
            String newPassword = txtNewPassword.getText();

            // Check for empty password
            if (newPassword.isEmpty() || newPassword.equals("Please enter a new Password")) {
                JOptionPane.showMessageDialog(null, "Please enter a new password.", "Empty Password", JOptionPane.WARNING_MESSAGE);
                return;
            }

            String currentPassword = txtCurrentPassword.getText();
            if (newPassword.equals(currentPassword)) {
                JOptionPane.showMessageDialog(null, "The new password cannot be the same as the current password.", "Same Password", JOptionPane.WARNING_MESSAGE);
                return;
            }

            int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to change your password?", "Confirm Password Change", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                ps1 = conn.prepareStatement("UPDATE app.USER_CREDENTIALS SET PASSWORD=? WHERE USERNAME=?");
                ps1.setString(1, newPassword); // Still storing password in plain text (not recommended)
                ps1.setString(2, txtUsername.getText());
                int rowsUpdated = ps1.executeUpdate();

                if (rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(null, "Password has been changed successfully!");
                    txtNewPassword.setText("Please enter a new Password");
                } else {
                    JOptionPane.showMessageDialog(null, "Password change failed. Please try again.");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "An error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSavePasswordMouseClicked

    private void txtCurrentPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCurrentPasswordActionPerformed

        try {
            ps1 = conn.prepareStatement("SELECT * FROM app.USER_CREDENTIALS WHERE USERNAME=?");
            ps1.setString(1, this.userName);
            rs1 = ps1.executeQuery();

            if (rs1.next()) {
                txtUsername.setText(rs1.getString("USERNAME"));
                txtCurrentPassword.setText(rs1.getString("PASSWORD"));
                txtCurrentPassword.setEchoChar('*');

            } else {
                JOptionPane.showMessageDialog(null, "No employee found with EMPLOYEE_ID: " + this.userName, "Employee Not Found", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "An error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtCurrentPasswordActionPerformed

    private void RecordCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecordCancelButtonActionPerformed
        PanelDisabler.setVisible(false);
        PanelDisabler.setEnabled(false);

        AddRecordPanel.setVisible(false);
        AddRecordPanel.setEnabled(false);
    }//GEN-LAST:event_RecordCancelButtonActionPerformed
    
    //function for automatic selection after operation
    public void updateChosenRow() {
            SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                        DefaultTableModel model = (DefaultTableModel) DimensionTable.getModel();
                        int lastRowIndex = DimensionTable.getRowCount()-1;
                        
                        DimensionTable.setRowSelectionInterval(lastRowIndex, lastRowIndex);
                        Rectangle rect = DimensionTable.getCellRect(lastRowIndex, 0, false);
                        DimensionTable.scrollRectToVisible(rect);
                        DimensionTable.revalidate();
                        DimensionTable.repaint();
                        
                    }
                });
        }
    
    // Function for Switching Panels
    public void switchPanel(JPanel panel){
        defaultPanel.setVisible(false);
        editStudentPanel.setVisible(false);
        editCoursePanel.setVisible(false);
        editCollegePanel.setVisible(false);
        editEmployeePanel.setVisible(false);
        editViolationPanel.setVisible(false);
        editSeverityPanel.setVisible(false);
        editSemesterPanel.setVisible(false);
        editSchoolYearPanel.setVisible(false);   
        
        addStudentPanel.setVisible(false);
        addCollegePanel.setVisible(false);
        addCoursePanel.setVisible(false);
        addEmployeePanel.setVisible(false);
        addViolationPanel.setVisible(false);
        addSeverityPanel.setVisible(false);
        addSchoolYearPanel.setVisible(false);
        addSemesterPanel.setVisible(false);
        panel.setVisible(true);
    }
    
    
    // Show Data Functions
    public void showStudentRecord(int selectedRow) {
        switchPanel(editStudentPanel);
        txtStudentNo.setText(DimensionTable.getValueAt(selectedRow, 0).toString());
        txtLastname.setText(DimensionTable.getValueAt(selectedRow, 1).toString());
        txtFirstname.setText(DimensionTable.getValueAt(selectedRow, 2).toString());
        txtEmail.setText(DimensionTable.getValueAt(selectedRow, 3).toString());         
        txtCpNum.setText(DimensionTable.getValueAt(selectedRow, 6).toString());
        txtAddress.setText(DimensionTable.getValueAt(selectedRow, 7).toString());
        txtBirthday.setText(DimensionTable.getValueAt(selectedRow, 8).toString());   
        txtCourseCode.setText(DimensionTable.getValueAt(selectedRow, 5).toString());
        txtDateOpened.setText(DimensionTable.getValueAt(selectedRow, 10).toString());
        txtDateClosed.setText(DimensionTable.getValueAt(selectedRow, 11).toString());
             
        
        txtStudentNo.setEnabled(false);      
        txtLastname.setEnabled(false);
        txtFirstname.setEnabled(false);
        txtEmail.setEnabled(false);
        txtCpNum.setEnabled(false);
        txtAddress.setEnabled(false);
        txtBirthday.setEnabled(false);
        txtCourseCode.setEnabled(false);
        txtDateOpened.setEnabled(false);
        txtDateClosed.setEnabled(false);   
        cmbEditStudentGender.setEnabled(false);
        cmbEditStudentStatus.setEnabled(false);
        
            String gender = DimensionTable.getValueAt(selectedRow, 4).toString();
            String studentStatus = DimensionTable.getValueAt(selectedRow, 9).toString();

                //Gender Selector
                 if (gender.charAt(0) == 'M') 
                   cmbEditStudentGender.setSelectedIndex(0);
                 else 
                   cmbEditStudentGender.setSelectedIndex(1);
                
                //Status Selector
                 if (studentStatus.charAt(0) == 'A') 
                    cmbEditStudentStatus.setSelectedIndex(0);
                 else 
                   cmbEditStudentStatus.setSelectedIndex(1);
            
    }
    
    
     public void showCourseRecord(int selectedRow) {
         String courseStatus = DimensionTable.getValueAt(selectedRow, 7).toString();
         switchPanel(editCoursePanel);
         //jLayeredPane1.moveToFront(editCoursePanel);
         txtEditCourseCode.setText(DimensionTable.getValueAt(selectedRow, 0).toString());
         txtEditDateOpened.setText(DimensionTable.getValueAt(selectedRow, 2).toString());
         txtEditDateClosed.setText(DimensionTable.getValueAt(selectedRow, 3).toString());
         txtEditCourseDescription.setText(DimensionTable.getValueAt(selectedRow, 1).toString());
         txtCollegeCodeFK.setText(DimensionTable.getValueAt(selectedRow, 4).toString());
                
         txtEditCourseCode.setEnabled(false);
         txtEditDateOpened.setEnabled(false);
         txtEditDateClosed.setEnabled(false);
         txtEditCourseDescription.setEnabled(false);
         txtCollegeCodeFK.setEnabled(false);
         cmbEditCourseStatus.setEnabled(false);
                
                if (courseStatus.charAt(0) == 'I') {
                    cmbEditCourseStatus.setSelectedItem("Inactive");                }
                 else {
                    cmbEditCourseStatus.setSelectedItem("Active");  
                 }
     }
     
     
     public void showCollegeRecord(int selectedRow) {
         String collegeStatus = DimensionTable.getValueAt(selectedRow, 4).toString();
         switchPanel(editCollegePanel);
                   
         txtEditCollegeCode.setText(DimensionTable.getValueAt(selectedRow, 0).toString());
         txtEditCollegeDescription.setText(DimensionTable.getValueAt(selectedRow, 1).toString());
         txtEditCollegeDateOpened.setText(DimensionTable.getValueAt(selectedRow, 2).toString());
         txtEditCollegeDateClosed.setText(DimensionTable.getValueAt(selectedRow, 3).toString());
         
         txtEditCollegeCode.setEnabled(false);
         txtEditCollegeDescription.setEnabled(false);
         txtEditCollegeDateOpened.setEnabled(false);
         txtEditCollegeDateClosed.setEnabled(false);
         cmbEditCollegeStatusSelector.setEnabled(false);
            if (collegeStatus.charAt(0) == 'I') {
                cmbEditCollegeStatusSelector.setSelectedItem("Inactive");                
            }
            else {
                cmbEditCollegeStatusSelector.setSelectedItem("Active");  
            }
            
     }
     
     public void showEmployeeRecord(int selectedRow) {
         
         String employeeGender = DimensionTable.getValueAt(selectedRow, 4).toString();
         String employeeStatus = DimensionTable.getValueAt(selectedRow, 8).toString();
         switchPanel(editEmployeePanel);
         txtEditEmployeeID.setText(DimensionTable.getValueAt(selectedRow, 0).toString());
         txtEditEmployeeLastname.setText(DimensionTable.getValueAt(selectedRow, 1).toString());
         txtEditEmployeeFirstname.setText(DimensionTable.getValueAt(selectedRow, 2).toString());
         txtEditEmployeeEmail.setText(DimensionTable.getValueAt(selectedRow, 3).toString());
         txtEditEmployeeCpNum.setText(DimensionTable.getValueAt(selectedRow, 5).toString());
         txtEditEmployeeAddress.setText(DimensionTable.getValueAt(selectedRow, 6).toString());
         txtEditEmployeeBirthday.setText(DimensionTable.getValueAt(selectedRow, 7).toString());
        
        txtEditEmployeeID.setEnabled(false);
        txtEditEmployeeLastname.setEnabled(false);
        txtEditEmployeeFirstname.setEnabled(false);
        txtEditEmployeeEmail.setEnabled(false);
        txtEditEmployeeCpNum.setEnabled(false);
        txtEditEmployeeAddress.setEnabled(false);
        txtEditEmployeeBirthday.setEnabled(false);
        cmbEditEmployeeGender.setEnabled(false);
        cmbEditEmployeeStatus.setEnabled(false);
        
                
        //Employee Gender
        if (employeeGender.charAt(0) == 'F') 
            cmbEditEmployeeGender.setSelectedItem("Female");                          
        //Employee Status
        if (employeeStatus.charAt(0) == 'I') {
              cmbEditEmployeeStatus.setSelectedItem("Inactive");                
            }
        else {
            cmbEditEmployeeStatus.setSelectedItem("Active");  
            }
     }
     
     
     public void showViolationTable(int selectedRow) {
         String violationStatus = DimensionTable.getValueAt(selectedRow, 3).toString();
         switchPanel(editViolationPanel);
         txtEditViolationCode.setText(DimensionTable.getValueAt(selectedRow, 0).toString());
         txtEditViolationDescription.setText(DimensionTable.getValueAt(selectedRow, 1).toString());
         txtEditSeverityCodeFK.setText(DimensionTable.getValueAt(selectedRow, 2).toString());
         
         txtEditViolationCode.setEnabled(false);
         txtEditViolationDescription.setEnabled(false);
         txtEditSeverityCodeFK.setEnabled(false);        
         cmbEditViolationStatus.setEnabled(false);
         
         if (violationStatus.charAt(0) == 'I') {
                cmbEditViolationStatus.setSelectedItem("Inactive");                
            } else {
                cmbEditViolationStatus.setSelectedItem("Active");  
            }
     }
     
     
     public void showSeverityTable(int selectedRow) {
         switchPanel(editSeverityPanel);
         txtEditSeverityCode.setText(DimensionTable.getValueAt(selectedRow, 0).toString());
         txtEditSeverityDescription.setText(DimensionTable.getValueAt(selectedRow, 1).toString());
         
         txtEditSeverityCode.setEnabled(false);
         txtEditSeverityDescription.setEnabled(false);
         
     }
     
     
     public void showSemester(int selectedRow) {
         switchPanel(editSemesterPanel);
         txtEditSemester.setText(DimensionTable.getValueAt(selectedRow, 0).toString());
         txtEditSemester.setEnabled(false);
     }
    
     
     public void showSchoolYear(int selectedRow) {
         switchPanel(editSchoolYearPanel);
         txtEditSchoolYear.setText(DimensionTable.getValueAt(selectedRow, 0).toString());
         txtEditSchoolYear.setEnabled(false);
     }
    
    
   
    //DATABASE UPDATE FUNCTIONS
    
    public void updateStudentValue (){
        
        conn = ConnectDB.Connect();
                
        try {
            int intAnswer = JOptionPane.showConfirmDialog(null, "Do you really want to edit this student?", "Confirm", JOptionPane.YES_NO_OPTION);
            char genderSelected = 'M';
            char statusSelected = 'A';
            
            //gender selection 
            if (cmbEditStudentGender.getSelectedItem().equals("Female"))
                genderSelected = 'F';
            //status selection
            if (cmbEditStudentStatus.getSelectedItem().equals("Inactive"))
                statusSelected = 'I';
            
            
            if (intAnswer == 0 ) {
                ps1 = conn.prepareStatement("UPDATE APP.STUDENT "
                                + " SET LASTNAME = '" +txtLastname.getText()+ "'"
                                        + ", FIRSTNAME = '" +txtFirstname.getText()+ "'"
                                                + ", EMAIL = '" +txtEmail.getText()+ "'"
                                                        + ", GENDER = '" +genderSelected+ "'"
                                                                + ", CP_NUM  = '" +txtCpNum.getText()+ "'"
                                                                   + ", ADDRESS = '" +txtAddress.getText()+ "'"
                                                                               + ", BDAY = '" +txtBirthday.getText()+ "'"
                                                                                        + ", STATUS = '" +statusSelected+ "'"
                                                                                                        + " WHERE STUDENT_NO = '" +txtStudentNo.getText()+ "'");
                                       
                ps1.execute();
                
                JOptionPane.showMessageDialog(null, "Editing of Record Successful!");
                refreshTableData();
                isEdit = false;
            } else {
                JOptionPane.showMessageDialog(null,"Editing of record is aborted!");
                isEdit = false;
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    // COURSE UPDATE
    public void updateCourseValue () {
        
        conn = ConnectDB.Connect();
        char selectedCourseStatus = 'A';
        if (cmbEditCourseStatus.getSelectedItem() == "Inactive")
            selectedCourseStatus = 'I';
        
        try {
             int intAnswer = JOptionPane.showConfirmDialog(null, "Do you really want to edit this course?", "Confirm", JOptionPane.YES_NO_OPTION);
             
             if (intAnswer == 0 ) {
                ps1 = conn.prepareStatement("UPDATE APP.COURSE "
                                + " SET DATE_OPENED = '" +txtEditDateOpened.getText()+ "'"
                                        + ", DATE_CLOSED = '" +txtEditDateClosed.getText()+ "'"
                                                + ", DESCRIPTION = '" +txtEditCourseDescription.getText()+ "'"
                                                        + ", STATUS = '" +selectedCourseStatus+ "'"
                                                            + " WHERE COURSE_CODE = '" +txtEditCourseCode.getText()+ "'");
                                       
                ps1.execute();
                
                JOptionPane.showMessageDialog(null, "Editing of Course Record Successful!");
                refreshTableData();
                isEdit = false;
            } else {
                JOptionPane.showMessageDialog(null,"Editing of course record is aborted!");
                isEdit = false;
             }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    //COLLEGE UPDATE
    public void updateCollegeValue () {
        
        conn = ConnectDB.Connect();
        char selectedCollegeStatus = 'A';
        if (cmbEditCollegeStatusSelector.getSelectedItem() == "Inactive")
            selectedCollegeStatus = 'I';
        
        try {
             int intAnswer = JOptionPane.showConfirmDialog(null, "Do you really want to edit this college?", "Confirm", JOptionPane.YES_NO_OPTION);
             
             if (intAnswer == 0 ) {
                ps1 = conn.prepareStatement("UPDATE APP.COLLEGE "
                                + " SET DESCRIPTION = '" +txtEditCollegeDescription.getText()+ "'"
                                        + ", DATE_OPENED = '" +txtEditCollegeDateOpened.getText()+ "'"
                                                + ", DATE_CLOSED = '" +txtEditCollegeDateClosed.getText()+ "'"
                                                        + ", STATUS = '" +selectedCollegeStatus+ "'"
                                                            + " WHERE COLLEGE_CODE = '" +txtEditCollegeCode.getText()+ "'");
                                       
                ps1.execute();
                
                JOptionPane.showMessageDialog(null, "Editing of College Record Successful!");
                refreshTableData();
                isEdit = false;
            } else {
                JOptionPane.showMessageDialog(null,"Editing of college record is aborted!");
                isEdit = false;
             }
        } catch (Exception e) {
            System.out.println(e);
        }
    
    }
    
    
    // EMPLOYEE
    public void updateEmployeeValue() {
        
        conn = ConnectDB.Connect();
        
        char selectedEmployeeGender = 'M';
        char selectedEmployeeStatus = 'A';
        
        if (cmbEditEmployeeGender.getSelectedItem() == "Female")
            selectedEmployeeGender = 'F';
        
        if (cmbEditEmployeeStatus.getSelectedItem() == "Inactive")
            selectedEmployeeStatus = 'I';
        
        
        try {
             int intAnswer = JOptionPane.showConfirmDialog(null, "Do you really want to edit this college?", "Confirm", JOptionPane.YES_NO_OPTION);
             
             if (intAnswer == 0 ) {
                ps1 = conn.prepareStatement("UPDATE APP.EMPLOYEE "
                                + " SET LASTNAME = '" +txtEditEmployeeLastname.getText()+ "'"
                                        + ", FIRSTNAME = '" +txtEditEmployeeLastname.getText()+ "'"
                                                + ", EMAIL = '" +txtEditEmployeeEmail.getText()+ "'"
                                                        + ", GENDER = '" +selectedEmployeeGender+ "'"
                                                            + ", CP_NUM = '" +txtEditEmployeeCpNum.getText()+ "'"
                                                                    + ", ADDRESS = '" +txtEditEmployeeAddress.getText()+ "'"
                                                                          // + ", BDAY = '" +txtEditEmployeeBirthday+ "'"
                                                                                    + ", STATUS = '" +selectedEmployeeStatus+ "'"
                                                                                            + " WHERE EMPLOYEE_ID = '" +txtEditEmployeeID.getText()+ "'");
                                       
                ps1.execute();
                JOptionPane.showMessageDialog(null, "Editing of College Record Successful!");
                refreshTableData();
                isEdit = false;
            } else {
                JOptionPane.showMessageDialog(null,"Editing of college record is aborted!");
                isEdit = false;
             }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    // Violation Function
    public void updateViolationValue() {
        char violationStatus = 'A';
        conn = ConnectDB.Connect();
        if (cmbEditViolationStatus.getSelectedItem() == "Inactive") {
            violationStatus = 'I';
        
            try {
                int intAnswer = JOptionPane.showConfirmDialog(null, "Do you really want to edit violation record?", "Confirm", JOptionPane.YES_NO_OPTION);

                if (intAnswer == 0) {
                    ps1 = conn.prepareStatement("UPDATE APP.VIOLATION "
                            + " SET DESCRIPTION = '" +txtEditViolationDescription.getText()+ "'"
                                    + ", STATUS = '" +violationStatus+ "' "
                                            + " WHERE = '" +txtEditViolationCode.getText()+ "'");
                
                    ps1.execute();
                    JOptionPane.showMessageDialog(null, "Editing of Violation is Successful!");
                    refreshTableData();
                    isEdit = false;
                } else {
                    JOptionPane.showMessageDialog(null,"Editing of violation record is aborted!");
                    isEdit = false;
                }
                
            } catch (Exception e){
                System.out.println(e);
            }     
        }  
    }
    
    // Severity Update
    public void updateSeverityValue() {
        conn=ConnectDB.Connect();
        
        try {
            int intAnswer = JOptionPane.showConfirmDialog(null, "Do you really want to edit severity record?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (intAnswer == 0) {
                ps1 = conn.prepareStatement("UPDATE APP.SEVERITY"
                        + " SET DESCRIPTION = '" +txtEditSeverityDescription.getText()+ "'"
                                + " WHERE SEVERITY_CODE = '" +txtEditSeverityCode.getText()+ "'");
                ps1.execute();
                JOptionPane.showMessageDialog(null, "Editing of Severity Record is Successful!");
                refreshTableData();
                isEdit = false;
            } else {
                    JOptionPane.showMessageDialog(null,"Editing of severity record is aborted!");
                    isEdit = false;
                }    
        } catch (Exception e) {
            System.out.println(e);
        } 
    }
    
    
    // DATABASE ADD FUNCTIONS
    
    // Add Student Record 
    public void addStudent() {
       conn=ConnectDB.Connect();
       
       try {
           int intAnswer = JOptionPane.showConfirmDialog(null, "Do You Really Want to Add Student Record ?","Confirm",JOptionPane.YES_NO_OPTION);
           char studentGender = 'M';
           char studentStatus = 'A';
           if (cmbAddStudentGender.getSelectedItem().equals("Female"))
               studentGender = 'F';
           if (cmbAddStudentStatus.getSelectedItem().equals("Inactive"))
               studentStatus = 'I';
           if (intAnswer==0) {
               ps1 = conn.prepareStatement("INSERT INTO APP.STUDENT "
                       + " VALUES ('" +txtAddStudentNo.getText()+ "'"
                               + ", '" +txtAddStudentLastname.getText()+ "'"
                                       + ", '" +txtAddStudentFirstname.getText()+ "'"
                                               + ", '" +txtAddStudentEmail.getText()+ "'"
                                                       + ", '" +studentGender+ "'"
                                                               + ", '" +cmbAddStudentCourseCode.getSelectedItem().toString()+ "'"
                                                                       + ", '" +txtAddStudentCpNum.getText()+ "'"
                                                                               + ", '" +txtAddStudentAddress.getText()+ "'"
                                                                                       + ", '" +txtAddStudentBirthday.getText()+ "'"
                                                                                               + ", '" +studentStatus+ "'"
                                                                                                       + ", '" +txtAddCourseDateOpenedFK.getText()+ "'"
                                                                                                               + ", '" +txtAddCourseDateClosedFK.getText()+ "')");
               ps1.execute();
               JOptionPane.showMessageDialog(null, "Adding of student record is successful.");
               refreshTableData();
               reset();
               isAdd=false;
           } else   {
               JOptionPane.showMessageDialog(null,"Adding of student record is aborted!");
               isAdd=false;
             }
           } catch (Exception e){
           System.out.println(e);
           JOptionPane.showMessageDialog(null, e, "WARNING", JOptionPane.ERROR_MESSAGE);
       }
   }
   
    // Course
    public void addCourse() {
           conn=ConnectDB.Connect(); 
           
           char collegeStatus = 'A';
           if (cmbAddCollegeStatus.getSelectedItem().equals("Inactive"))
               collegeStatus = 'I';
           try {
               int intAnswer = JOptionPane.showConfirmDialog(null, "Do You Really Want Add to Course Student Record ?","Confirm",JOptionPane.YES_NO_OPTION);
               if (intAnswer==0) {
                    ps1=conn.prepareStatement("INSERT INTO APP.COURSE "
                            + " VALUES ('" +txtAddCourseCode.getText()+ "'"
                                    + ", '" +txtAddCourseDescription.getText()+ "'"
                                            + ", '" +txtAddCourseDateOpened.getText()+ "'"
                                                    + ", '" +txtAddCourseDateClosed.getText()+ "'"
                                                            + ", '" +cmbAddCollegeCodeFK.getSelectedItem().toString()+ "'"
                                                                    + ", '" +txtAddCollegeDateOpenedFK.getText()+ "'"
                                                                            + ", '" +txtAddCollegeDateClosedFK.getText()+ "'"
                                                                                    + ", '" +collegeStatus+ "')");
                    ps1.execute();
                    JOptionPane.showMessageDialog(null, "Adding of course record is successful.");
                    refreshTableData();
                    reset();
                    isAdd=false;
               }    else { 
                        JOptionPane.showMessageDialog(null,"Adding of course record is aborted!");
                        isAdd=false;
               }
           } catch (Exception e){
               System.out.println(e);
               JOptionPane.showMessageDialog(null, e, "WARNING", JOptionPane.ERROR_MESSAGE);
           }
       }
    
    // ADD COLLEGE
    public void addCollege() {
        conn=ConnectDB.Connect();
        char collegeStatus = 'A';
        if (cmbAddCollegeStatus.getSelectedItem().equals("Inactive"))
               collegeStatus = 'I';
        
        try {
            int intAnswer = JOptionPane.showConfirmDialog(null, "Do You Really Want to Add College Record ?","Confirm",JOptionPane.YES_NO_OPTION);
            if (intAnswer==0) {
                ps1 = conn.prepareStatement("INSERT INTO APP.COLLEGE "
                        + " VALUES ('" +txtAddCollegeCode.getText()+ "'"
                                + ", '" +txtAddCollegeDescription.getText()+ "'"
                                        + ", '" +txtAddCollegeDateOpened.getText()+ "'"
                                                + ", '" +txtAddCollegeDateClosed.getText()+ "'"
                                                        + ", '" +collegeStatus+ "')");
                ps1.execute();
                JOptionPane.showMessageDialog(null, "Adding of college record is successful.");
                refreshTableData();
                reset();
                isAdd=false;
            } else {
                JOptionPane.showMessageDialog(null,"Adding of college record is aborted!");
                isAdd=false;
            }
        } catch (Exception e){
               System.out.println(e);
               JOptionPane.showMessageDialog(null, e, "WARNING", JOptionPane.ERROR_MESSAGE);
           } 
    }
    
    // Add Employee Record  
    public void addEmployee() {
        conn=ConnectDB.Connect();
        char employeeGender = 'M';
        char employeeStatus = 'A';
        
        if (cmbAddEmployeeGender.getSelectedItem().equals("Female"))
               employeeGender = 'F';
        char collegeStatus = 'A';
        if (cmbAddEmployeeStatus.getSelectedItem().equals("Inactive"))
               employeeStatus = 'I';
        
        try {
            int intAnswer = JOptionPane.showConfirmDialog(null, "Do You Really Want to Add Employee Record ?","Confirm",JOptionPane.YES_NO_OPTION);
            if (intAnswer==0) {
                ps1 = conn.prepareStatement("INSERT INTO APP.EMPLOYEE "
                        + " VALUES( '" +txtAddEmployeeID.getText()+ "'"
                                + ", '" +txtAddEmployeeLastname.getText()+ "'"
                                        + ", '" +txtAddEmployeeFirstname.getText()+ "'"
                                                + ", '" +txtAddEmployeeEmail.getText()+ "'"
                                                        + ", '" +employeeGender+ "'"
                                                                + ", '" +txtAddEmployeeCpNum.getText()+ "'"
                                                                        + ", '" +txtAddEmployeeAddress.getText()+ "'"
                                                                                + ", '" +txtAddEmployeeBirthday.getText()+ "'"
                                                                                        + ", '" +employeeStatus+ "')");
                ps1.execute();
                JOptionPane.showMessageDialog(null, "Adding of employee record is successful.");
                refreshTableData();
                reset();
                isAdd=false;
            } else {
                JOptionPane.showMessageDialog(null,"Adding of employee record is aborted!");
                isAdd=false;
            }
        } catch (Exception e){
               System.out.println(e);
               JOptionPane.showMessageDialog(null, e, "WARNING", JOptionPane.ERROR_MESSAGE);
           } 
    }
    
    // Add Violation 
    public void addViolation() {
        conn = ConnectDB.Connect();
        
        char violationStatus = 'A';
        if (cmbAddViolationStatus.getSelectedItem().equals("Inactive"));
            violationStatus = 'I';
            
        try {
            int intAnswer = JOptionPane.showConfirmDialog(null, "Do You Really Want to Add Violation ?","Confirm",JOptionPane.YES_NO_OPTION);
            if (intAnswer==0) {
                ps1 = conn.prepareStatement("INSERT INTO APP.VIOLATION "
                        + " VALUES('" +txtAddViolationCode.getText()+ "'"
                                + ", '" +txtAddViolationDescription.getText()+ "'"
                                        + ", " +cmbAddSeverityCodeFK.getSelectedItem()+ ""
                                                + ", '" +violationStatus+ "')");
                ps1.execute();
                JOptionPane.showMessageDialog(null, "Adding of violtion is successful.");
                refreshTableData();
                reset();
                isAdd=false;
            } else {
                JOptionPane.showMessageDialog(null,"Adding of violation is aborted!");
                isAdd=false;
            }
        } catch (Exception e){
               System.out.println(e);
               JOptionPane.showMessageDialog(null, e, "WARNING", JOptionPane.ERROR_MESSAGE);
           } 
    }
    
    // Add Severity Record
    public void addSeverity() {
        conn = ConnectDB.Connect();
        //String str = txtAddSeverityCode.getText().trim();
        //int severityCode = Integer.parseInt(str);
        try {
            int intAnswer = JOptionPane.showConfirmDialog(null, "Do You Really Want to Add Severity Record ?","Confirm",JOptionPane.YES_NO_OPTION);
            if (intAnswer==0) {
                ps1 = conn.prepareStatement("INSERT INTO APP.SEVERITY "
                        + " VALUES(" +Integer.valueOf(txtAddSeverityCode.getText())+ ""
                                + ", '" +txtAddSeverityDescription.getText()+ "')");
                ps1.execute();
                JOptionPane.showMessageDialog(null, "Adding of severity record is successful.");
                refreshTableData();
                reset();
                isAdd=false;
            } else {
                JOptionPane.showMessageDialog(null,"Adding of severity record is aborted!");
                isAdd=false;
            }
        } catch (Exception e){
               System.out.println(e);
               JOptionPane.showMessageDialog(null, e, "WARNING", JOptionPane.ERROR_MESSAGE);
           } 
    }
    
    //Add School Year
    public void addSchoolYear() {
        conn = ConnectDB.Connect();
        
        try {
            int intAnswer = JOptionPane.showConfirmDialog(null, "Do You Really Want to Add School Year Record ?","Confirm",JOptionPane.YES_NO_OPTION);
            if (intAnswer==0) {
                ps1 = conn.prepareStatement("INSERT INTO APP.SY "
                        + " VALUES('" +txtAddSchoolYear.getText()+ "')");
                ps1.execute();
                JOptionPane.showMessageDialog(null, "Adding of school year record is successful.");
                refreshTableData();
                reset();
                isAdd=false;
            } else {
                JOptionPane.showMessageDialog(null,"Adding of school year record is aborted!");
                isAdd=false;
            }
        }   catch (Exception e){
               System.out.println(e);
               JOptionPane.showMessageDialog(null, e, "WARNING", JOptionPane.ERROR_MESSAGE);
           } 
        
    }
    
    //Add Semester
    public void addSemester() {
        conn = ConnectDB.Connect();
        try {
            int intAnswer = JOptionPane.showConfirmDialog(null, "Do You Really Want to Semester Record ?","Confirm",JOptionPane.YES_NO_OPTION);
            if (intAnswer==0) {
                ps1 = conn.prepareStatement("INSERT INTO APP.SEMESTER "
                        + " VALUES('" +txtAddSemester.getText()+ "')");
                ps1.execute();
                JOptionPane.showMessageDialog(null, "Adding of semester record is successful.");
                refreshTableData();
                reset();
                isAdd=false;
            } else {
                JOptionPane.showMessageDialog(null,"Adding of semester record is aborted!");
                isAdd=false;
            }
        }   catch (Exception e){
               System.out.println(e);
               JOptionPane.showMessageDialog(null, e, "WARNING", JOptionPane.ERROR_MESSAGE);
           } 
    }
    
    
    // DATA BASE DELETE FUNCTIONS
    
    //Delete Student Record
    public void deleteStudentRecord(){
        conn = ConnectDB.Connect();
        
        try {
            int intAnswer = JOptionPane.showConfirmDialog(null, "Do you really want to delete this student record?", "DELETING STUDENT RECORD", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (intAnswer==0) {
                ps1 = conn.prepareStatement("DELETE FROM APP.STUDENT "
                        + " WHERE STUDENT_NO = '" +txtStudentNo.getText()+ "'");
                ps1.execute();
                refreshTableData();
                JOptionPane.showMessageDialog(null, "Deleting of student record is successful.");
            }  else
                JOptionPane.showMessageDialog(null, "Deleting of student record is aborted.");
        } catch (Exception e){
            System.out.println(e);
        }
    }
    
    // Delete Course Record
    public void deleteCourseRecord() {
        conn = ConnectDB.Connect();
        
        try{
            int intAnswer = JOptionPane.showConfirmDialog(null, "Do you really want to delete this course record?", "DELETING COURSE RECORD", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (intAnswer==0) {
                ps1 = conn.prepareStatement("DELETE FROM APP.COURSE "
                        + " WHERE COURSE_CODE = '" +txtEditCourseCode.getText()+ "'");
                ps1.execute();
                refreshTableData();
                JOptionPane.showMessageDialog(null, "Deleting of course record is successful.");
            }  else
                JOptionPane.showMessageDialog(null, "Deleting of course record is aborted.");
        } catch (Exception e){
            System.out.println(e);
        }
    }
    
    // Deletion of College Record
    public void deleteCollegeRecord() {
        conn = ConnectDB.Connect();
        
        try{
            int intAnswer = JOptionPane.showConfirmDialog(null, "Do you really want to delete this college record?", "DELETING COLLEGE RECORD", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (intAnswer==0) {
                ps1 = conn.prepareStatement("DELETE FROM APP.COLLEGE "
                        + " WHERE COLLEGE_CODE = '" +txtEditCollegeCode.getText()+ "'");
                ps1.execute();
                refreshTableData();
                JOptionPane.showMessageDialog(null, "Deleting of college record is successful.");
            }  else
                JOptionPane.showMessageDialog(null, "Deleting of college record is aborted.");
        } catch (Exception e){
            System.out.println(e);
        }
    }
    
    //Deletion of Employee Record
    public void deleteEmployeeRecord(){
        conn=ConnectDB.Connect();
        try{
            int intAnswer = JOptionPane.showConfirmDialog(null, "Do you really want to delete this employee record?", "DELETING EMPLOYEE RECORD", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (intAnswer==0) {
                ps1 = conn.prepareStatement("DELETE FROM APP.EMPLOYEE "
                        + " WHERE EMPLOYEE_ID = '" +txtEditEmployeeID.getText()+ "'");
                ps1.execute();
                refreshTableData();
                JOptionPane.showMessageDialog(null, "Deleting of emplpyee record is successful.");
            }  else
                JOptionPane.showMessageDialog(null, "Deleting of employee record is aborted.");
        } catch (Exception e){
            System.out.println(e);
            }
    }
    
    // Deletion of Violation
    public void deleteViolation(){
        conn=ConnectDB.Connect();
        try{
            int intAnswer = JOptionPane.showConfirmDialog(null, "Do you really want to delete this violation?", "DELETING VIOLATION", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (intAnswer==0) {
                ps1 = conn.prepareStatement("DELETE FROM APP.VIOLATION "
                        + " WHERE VIOLATION_CODE = '" +txtEditViolationCode.getText()+ "'");
                ps1.execute();
                refreshTableData();
                JOptionPane.showMessageDialog(null, "Deleting of violation is successful.");
            }  else
                JOptionPane.showMessageDialog(null, "Deleting of violation is aborted.");
        } catch (Exception e){
            System.out.println(e);
            }
    }
    
    //delete severity record
    public void deleteSeverity () {
        conn=ConnectDB.Connect();
        try{
            
            int intAnswer = JOptionPane.showConfirmDialog(null, "Do you really want to delete this severity record?", "DELETING SEVERITY RECORD", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (intAnswer==0) {
                ps1 = conn.prepareStatement("DELETE FROM APP.SEVERITY "
                        + " WHERE SEVERITY_CODE = " +Integer.valueOf(txtEditSeverityCode.getText())+ "");
                ps1.execute();
                refreshTableData();
                JOptionPane.showMessageDialog(null, "Deleting of severity record is successful.");
            }  else
                JOptionPane.showMessageDialog(null, "Deleting of severity record is aborted.");
        } catch (Exception e){
            System.out.println(e);
            }
    }
    
    // delete school year record
    public void deleteSchoolYear() {
        conn = ConnectDB.Connect();
        try {
            int intAnswer = JOptionPane.showConfirmDialog(null, "Do you really want to delete this school year record?", "DELETING SCHOOL YEAR RECORD", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (intAnswer==0) {
                ps1 = conn.prepareStatement("DELETE FROM APP.SY "
                        + " WHERE SY = '" +txtEditSchoolYear.getText()+ "'");
                ps1.execute();
                refreshTableData();
                JOptionPane.showMessageDialog(null, "Deleting of school year record is successful.");
            } else
                JOptionPane.showMessageDialog(null, "Deleting of school year record is aborted.");
        }   catch (Exception e){
            System.out.println(e);
            }
    }
    
    // delete semester record
    public void deleteSemester() {
        conn = ConnectDB.Connect();
        try {
            int intAnswer = JOptionPane.showConfirmDialog(null, "Do you really want to delete this semester record?", "DELETING SEMESTER RECORD", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (intAnswer==0) {
                ps1 = conn.prepareStatement("DELETE FROM APP.SEMESTER "
                        + " WHERE SEMESTER = '" +txtEditSemester.getText()+ "'");
                ps1.execute();
                refreshTableData();
                JOptionPane.showMessageDialog(null, "Deleting of semester record is successful.");
            } else
                JOptionPane.showMessageDialog(null, "Deleting of semester record is aborted.");
        }   catch (Exception e){
            System.out.println(e);
            }
    }
    
    
    
    // Clear/Reset Function after Adding
    
    public void reset() {
        selectedTableName = DimensionTableSelector.getSelectedItem().toString();
        int selectedRow = DimensionTable.getSelectedRow();
        if (isAdd) {
            if(selectedTableName.equalsIgnoreCase("Student")){
                txtAddStudentNo.setText(null);
                txtAddStudentLastname.setText(null);
                txtAddStudentFirstname.setText(null);
                txtAddStudentEmail.setText(null);
                cmbAddStudentGender.setSelectedIndex(-1);
                cmbAddStudentCourseCode.setSelectedIndex(-1);
                txtAddStudentCpNum.setText(null);
                txtAddStudentAddress.setText(null);
                txtAddStudentBirthday.setText(null);
                cmbAddStudentStatus.setSelectedIndex(-1);
                txtAddCourseDateOpenedFK.setText(null);
                txtAddCourseDateClosedFK.setText(null);
            } else if(selectedTableName.equalsIgnoreCase("Course")) {
                txtAddCourseCode.setText(null);
                txtAddCourseDateOpened.setText(null);
                txtAddCourseDateClosed.setText(null);
                txtAddCourseDescription.setText(null);
                cmbAddCourseStatus.setSelectedItem(-1);
                cmbAddCollegeCodeFK.setSelectedItem(-1);
                txtAddCollegeDateOpenedFK.setText(null);
                txtAddCollegeDateClosedFK.setText(null);
            } else if(selectedTableName.equalsIgnoreCase("College")) {
                txtAddCollegeCode.setText(null);
                txtAddCollegeDescription.setText(null);
                txtAddCollegeDateOpened.setText(null);
                txtAddCollegeDateClosed.setText(null);
                cmbAddCollegeStatus.setSelectedIndex(-1); 
            } else if(selectedTableName.equalsIgnoreCase("Employee")) {
                txtAddEmployeeID.setText(null);
                txtAddEmployeeLastname.setText(null);
                txtAddEmployeeFirstname.setText(null);
                txtAddEmployeeEmail.setText(null);
                txtAddEmployeeCpNum.setText(null);
                txtAddEmployeeAddress.setText(null);
                txtAddEmployeeBirthday.setText(null);
                cmbAddEmployeeGender.setSelectedIndex(-1);
                cmbAddEmployeeStatus.setSelectedIndex(-1);
            }  else if(selectedTableName.equalsIgnoreCase("Violation")) {
                txtAddViolationCode.setText(null);
                txtAddViolationDescription.setText(null);
                cmbAddSeverityCodeFK.setSelectedIndex(-1);
                cmbAddViolationStatus.setSelectedIndex(-1);
            }  else if(selectedTableName.equalsIgnoreCase("Severity")) {
                txtAddSeverityCode.setText(null);
                txtAddSeverityDescription.setText(null);
            }   else if(selectedTableName.equalsIgnoreCase("SY")) {
                txtAddSchoolYear.setText(null);
            }   else if(selectedTableName.equalsIgnoreCase("Semester")) {
                txtAddSemester.setText(null);
            }
            
        }
    }
    
    
    // Allows Editing of Chosen Row / Resets to the original selected row values
    public void showToEdit() {
      selectedTableName = DimensionTableSelector.getSelectedItem().toString();
      
        if(isEdit) {
            if (selectedTableName.equalsIgnoreCase("Student")) {
                txtStudentNo.setText(DimensionTable.getValueAt(prevSelectedRow, 0).toString());
                txtLastname.setText(DimensionTable.getValueAt(prevSelectedRow, 1).toString());
                txtFirstname.setText(DimensionTable.getValueAt(prevSelectedRow, 2).toString());
                txtEmail.setText(DimensionTable.getValueAt(prevSelectedRow, 3).toString());         
                txtCpNum.setText(DimensionTable.getValueAt(prevSelectedRow, 6).toString());
                txtAddress.setText(DimensionTable.getValueAt(prevSelectedRow, 7).toString());
                txtBirthday.setText(DimensionTable.getValueAt(prevSelectedRow, 8).toString());   
                txtCourseCode.setText(DimensionTable.getValueAt(prevSelectedRow, 5).toString());
                txtDateOpened.setText(DimensionTable.getValueAt(prevSelectedRow, 10).toString());
                txtDateClosed.setText(DimensionTable.getValueAt(prevSelectedRow, 11).toString());
                
                String gender = DimensionTable.getValueAt(prevSelectedRow, 4).toString();
                String studentStatus = DimensionTable.getValueAt(prevSelectedRow, 9).toString();

                //Gender Selector
                 if (gender.charAt(0) == 'M') 
                   cmbEditStudentGender.setSelectedIndex(0);
                 else 
                   cmbEditStudentGender.setSelectedIndex(1);
                //Status Selector
                 if (studentStatus.charAt(0) == 'A') 
                    cmbEditStudentStatus.setSelectedIndex(0);
                 else 
                   cmbEditStudentStatus.setSelectedIndex(1);
                 
                txtStudentNo.setEditable(false);
                txtCourseCode.setEditable(false);
                txtDateOpened.setEditable(false);
                txtDateClosed.setEditable(false); 
                
            } else if(selectedTableName.equalsIgnoreCase("Course")){
                String courseStatus = DimensionTable.getValueAt(prevSelectedRow, 7).toString();
                txtEditCourseCode.setText(DimensionTable.getValueAt(prevSelectedRow, 0).toString());
                txtEditDateOpened.setText(DimensionTable.getValueAt(prevSelectedRow, 2).toString());
                txtEditDateClosed.setText(DimensionTable.getValueAt(prevSelectedRow, 3).toString());
                txtEditCourseDescription.setText(DimensionTable.getValueAt(prevSelectedRow, 1).toString());
                txtCollegeCodeFK.setText(DimensionTable.getValueAt(prevSelectedRow, 4).toString());
                if (courseStatus.charAt(0) == 'I') 
                        cmbEditCourseStatus.setSelectedItem("Inactive");                
                    else 
                      cmbEditCourseStatus.setSelectedItem("Active");  
                     
               txtEditCourseCode.setEditable(false);
               txtEditDateOpened.setEditable(false);
               txtCollegeCodeFK.setEditable(false);
         
            } else if(selectedTableName.equalsIgnoreCase("College")){
                String collegeStatus = DimensionTable.getValueAt(prevSelectedRow, 4).toString();
                txtEditCollegeCode.setText(DimensionTable.getValueAt(prevSelectedRow, 0).toString());
                txtEditCollegeDescription.setText(DimensionTable.getValueAt(prevSelectedRow, 1).toString());
                txtEditCollegeDateOpened.setText(DimensionTable.getValueAt(prevSelectedRow, 2).toString());
                txtEditCollegeDateClosed.setText(DimensionTable.getValueAt(prevSelectedRow, 3).toString());
                if (collegeStatus.charAt(0) == 'I') 
                    cmbEditCollegeStatusSelector.setSelectedItem("Inactive");                
                else 
                    cmbEditCollegeStatusSelector.setSelectedItem("Active");  
                
                txtEditCollegeCode.setEditable(false);
                txtEditCollegeDateOpened.setEditable(false);
                
            } else if(selectedTableName.equalsIgnoreCase("Employee")){
                String employeeGender = DimensionTable.getValueAt(prevSelectedRow, 4).toString();
                String employeeStatus = DimensionTable.getValueAt(prevSelectedRow, 8).toString();
                txtEditEmployeeID.setText(DimensionTable.getValueAt(prevSelectedRow, 0).toString());
                txtEditEmployeeLastname.setText(DimensionTable.getValueAt(prevSelectedRow, 1).toString());
                txtEditEmployeeFirstname.setText(DimensionTable.getValueAt(prevSelectedRow, 2).toString());
                txtEditEmployeeEmail.setText(DimensionTable.getValueAt(prevSelectedRow, 3).toString());
                txtEditEmployeeCpNum.setText(DimensionTable.getValueAt(prevSelectedRow, 5).toString());
                txtEditEmployeeAddress.setText(DimensionTable.getValueAt(prevSelectedRow, 6).toString());
                txtEditEmployeeBirthday.setText(DimensionTable.getValueAt(prevSelectedRow, 7).toString());
                
               //Employee Gender
               if (employeeGender.charAt(0) == 'F') 
                   cmbEditEmployeeGender.setSelectedItem("Female");                          
               //Employee Status
               if (employeeStatus.charAt(0) == 'I') 
                    cmbEditEmployeeStatus.setSelectedItem("Inactive");                
                else 
                   cmbEditEmployeeStatus.setSelectedItem("Active");
               
               txtEditEmployeeID.setEditable(false);

            } else if(selectedTableName.equalsIgnoreCase("Violation")){
                String violationStatus = DimensionTable.getValueAt(prevSelectedRow, 3).toString();
                txtEditViolationCode.setText(DimensionTable.getValueAt(prevSelectedRow, 0).toString());
                txtEditViolationDescription.setText(DimensionTable.getValueAt(prevSelectedRow, 1).toString());
                txtEditSeverityCodeFK.setText(DimensionTable.getValueAt(prevSelectedRow, 2).toString());
                if (violationStatus.charAt(0) == 'I') 
                    cmbEditViolationStatus.setSelectedItem("Inactive");                
                else 
                    cmbEditViolationStatus.setSelectedItem("Active");  
                
                txtEditViolationCode.setEditable(false);
                txtEditSeverityCodeFK.setEditable(false);
            
            } else if(selectedTableName.equalsIgnoreCase("Severity")){
                txtEditSeverityCode.setText(DimensionTable.getValueAt(prevSelectedRow, 0).toString());
                txtEditSeverityDescription.setText(DimensionTable.getValueAt(prevSelectedRow, 1).toString());
                txtEditSeverityCode.setEditable(false);
            } 
        }  
    }
    
    
    
    //Action Event
    public void DimensionTableSelectorActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        String selectedTable = DimensionTableSelector.getSelectedItem().toString(); //turns each data to string
        loadTableData(selectedTable);
    }  
    
    // refreshes table data
    public void refreshTableData() {
    if (selectedTableName != null && !selectedTableName.isEmpty()) {
        DimensionTableSelector.setSelectedItem(selectedTableName);
        loadTableData(selectedTableName);
        }
    }

    
    
   // FILL COMBO BOX COURSE CODE WITH VALUES (STRAIGHT CONNECTION FROM  COURSE TABLE)
    private void fillComboCourse() {
        try {
            PreparedStatement pst = conn.prepareStatement("SELECT * FROM APP.COURSE");
            ResultSet rs = pst.executeQuery();
            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
            
            while(rs.next()) {
                String course = rs.getString("COURSE_CODE");
                model.addElement( course);
            }
            cmbAddStudentCourseCode.setModel(model);
            //jComboBoxCourseCodePopupMenuWillBecomeInvisible
        } catch (Exception e){
            System.out.println(e);
        }
    }
    
    // FILL COMBO BOX COLLEGE CODE WITH VALUES (STRAIGHT CONNECTION FROM  COURSE TABLE)
    private void fillComboCollegeFK() {
        try {
            PreparedStatement pst = conn.prepareStatement("SELECT * FROM APP.COLLEGE");
            ResultSet rs = pst.executeQuery();
            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
            
            while(rs.next()) {
                String college = rs.getString("COLLEGE_CODE");
                model.addElement( college);
            }
            cmbAddCollegeCodeFK.setModel(model);
            //jComboBoxCourseCodePopupMenuWillBecomeInvisible
        } catch (Exception e){
            System.out.println(e);
        }
    }
    
    public void fillSeverityCodeFK() {
        try {
            PreparedStatement pst = conn.prepareStatement("SELECT * FROM APP.SEVERITY");
            ResultSet rs = pst.executeQuery();
            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
            
            while(rs.next()) {
                String severityCode = rs.getString("SEVERITY_CODE");
                model.addElement( severityCode);
            }
            cmbAddSeverityCodeFK.setModel(model);
            //jComboBoxCourseCodePopupMenuWillBecomeInvisible
        } catch (Exception e){
            System.out.println(e);
        }
    }
    
    
    // loads the table names for the database filter 
    public void loadTableNames() {
        try {
        DatabaseMetaData dbmd = conn.getMetaData();
        String[] types = {"TABLE"};
        ResultSet rs = dbmd.getTables(null, "APP", "%", types); // Specify "APP" as the schema pattern.
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        while (rs.next()) { 
            String tableName = rs.getString(3);
            if (!tableName.startsWith("SYS") && !tableName.equals("VIOLATION_RECORD")) { // Exclude system tables
                model.addElement( tableName);
            }
        }

        DimensionTableSelector.setModel(model);
    } catch (SQLException e) {
        e.printStackTrace();
        }
    }
    
    //load tables data base on the selected table in the database filter 
    public void loadTableData(String tableName) {
         try {
        PreparedStatement ps = conn.prepareStatement("SELECT * FROM APP." + tableName);
        ResultSet rs = ps.executeQuery();
        TableModel model = DbUtils.resultSetToTableModel(rs);

    
        TableModel nonEditableModel = new DefaultTableModel(model.getRowCount(), model.getColumnCount()) {
            @Override
            public Object getValueAt(int row, int column) {
                return model.getValueAt(row, column);
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // This will make all cells uneditable
            }

            @Override
            public String getColumnName(int column) {
                return model.getColumnName(column);
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return model.getColumnClass(columnIndex);
            }
        };

        // Set the custom non-editable model to the jTable1
        DimensionTable.setModel(nonEditableModel);
    } catch (SQLException e) {
        e.printStackTrace();
        }
         
    }
   private void setTableDataAndResizeColumns() {
    try {
        LatestViolationsFullWindowTable.getColumnModel().getColumn(0).setPreferredWidth(75);
        LatestViolationsFullWindowTable.getColumnModel().getColumn(1).setPreferredWidth(85);
        LatestViolationsFullWindowTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        LatestViolationsFullWindowTable.getColumnModel().getColumn(3).setPreferredWidth(120);
        LatestViolationsFullWindowTable.getColumnModel().getColumn(4).setPreferredWidth(100);
        LatestViolationsFullWindowTable.getColumnModel().getColumn(5).setPreferredWidth(135);
        LatestViolationsFullWindowTable.getColumnModel().getColumn(6).setPreferredWidth(200);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "An error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    
   }
   private void initDropdownAndTable() {
        try {
            String selectedItem = (String) jComboBox1.getSelectedItem();
            // Populate the dropdown with column names
            jComboBox1.removeAllItems();
            jComboBox1.addItem(" ");
            jComboBox1.addItem("ALL COLUMNS");
            ps1 = conn.prepareStatement("SELECT * FROM app.VIOLATION_RECORD");
            rs1 = ps1.executeQuery();

            ResultSetMetaData metaData = rs1.getMetaData();
            int columnCount = metaData.getColumnCount();

            for (int i = 1; i <= columnCount; i++) {
                String columnName = metaData.getColumnName(i);
                jComboBox1.addItem(columnName);
            }

            if (selectedItem != null) {
                jComboBox1.setSelectedItem(selectedItem);
            }

            // Fill the Violation table with data
            tblLatestViolationTable.setEnabled(false);
            ps1 = conn.prepareStatement("SELECT * FROM app.VIOLATION_RECORD ORDER BY DATE_OF_VIOLATION DESC");
            rs1 = ps1.executeQuery();
            tblLatestViolationTable.setModel(DbUtils.resultSetToTableModel(rs1));

            // Fill the Quick Search table with data
            tblQuickSearchTable.setEnabled(false);
            ps1 = conn.prepareStatement("SELECT * FROM app.VIOLATION_RECORD ORDER BY DATE_OF_VIOLATION DESC");
            rs1 = ps1.executeQuery();
            tblQuickSearchTable.setModel(DbUtils.resultSetToTableModel(rs1));

            // FULL VIEW TABLE
            ps1 = conn.prepareStatement("SELECT * FROM app.VIOLATION_RECORD ORDER BY DATE_OF_VIOLATION DESC");
            rs1 = ps1.executeQuery();

            LatestViolationsFullWindowTable.setModel(DbUtils.resultSetToTableModel(rs1));
            setTableDataAndResizeColumns();
        } catch (SQLException ex) {
            // Handle SQL exceptions
            JOptionPane.showMessageDialog(this, "Error fetching data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void setUserProfile(){
        try {           
            
            ps1= conn.prepareStatement("SELECT * FROM app.EMPLOYEE WHERE EMPLOYEE_ID=?");
            ps1.setString(1, this.userName);
            rs1= ps1.executeQuery();
            
            if (rs1.next()) {
                NameHolder.setText(rs1.getString("FIRSTNAME")+" "+rs1.getString("LASTNAME"));
                
                txtUserInfoName.setText(rs1.getString("FIRSTNAME")+" "+rs1.getString("LASTNAME"));
                String EmailUsername = rs1.getString("EMAIL").substring(0, rs1.getString("EMAIL").indexOf("@"));
                String plmEmail = EmailUsername + "@plm.edu.ph";
                txtPLMEmail.setText(plmEmail);
                txtPersonalEmail.setText(rs1.getString("EMAIL"));
                txtUsername.setText(rs1.getString("EMPLOYEE_ID"));
                txtContactNum.setText(rs1.getString("CP_NUM"));
                txtAddress.setText(rs1.getString("ADDRESS"));
                txtBday.setText(rs1.getString("BDAY"));
                
                txtStatus.setText(rs1.getString("STATUS"));
            } else {
                JOptionPane.showMessageDialog(null, "No employee found with EMPLOYEE_ID: " + this.userName, "Employee Not Found", JOptionPane.WARNING_MESSAGE);
            }
            
            ps1 = conn.prepareStatement("SELECT * FROM app.USER_CREDENTIALS WHERE USERNAME=?");
            ps1.setString(1, this.userName);
            rs1 = ps1.executeQuery();
            if (rs1.next()) {
                txtUsername.setText(rs1.getString("USERNAME"));
                txtCurrentPassword.setText(rs1.getString("PASSWORD"));
                txtCurrentPassword.setEchoChar('*');
                
            } else {
                JOptionPane.showMessageDialog(null, "No employee found with EMPLOYEE_ID: " + this.userName, "Employee Not Found", JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException ex) {
            // Handle SQL exceptions
            JOptionPane.showMessageDialog(this, "Error fetching data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    
    // SELECTED TABLE
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OSDSDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OSDSDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OSDSDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OSDSDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OSDSDashBoard().setVisible(true);
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private SwingPackage.ButtonMaker AddRecordButton;
    private SwingPackage.PanelBorder AddRecordPanel;
    private javax.swing.JLabel Admin;
    private SwingPackage.PanelBorder AnnHolder1;
    private SwingPackage.PanelBorder AnnHolder2;
    private SwingPackage.PanelBorder AnnHolder3;
    private SwingPackage.PanelBorder AnnHolder4;
    private SwingPackage.PanelBorder AnnouncementHolder;
    private SwingPackage.MenuPanel Background;
    private SwingPackage.ButtonMaker CancelChangesButton;
    private SwingPackage.PanelBorder ChangePasswordPanel;
    private SwingPackage.ButtonMaker ConfirmChangesButton;
    private javax.swing.JLabel Dash_Title;
    private javax.swing.JLabel Dash_Title1;
    private javax.swing.JLabel Dash_Title2;
    private javax.swing.JLabel Dash_Title3;
    private SwingPackage.PanelBorder DashboardHolder;
    private javax.swing.JPanel DatabasePanel;
    private javax.swing.JTable DimensionTable;
    private javax.swing.JComboBox<String> DimensionTableSelector;
    private javax.swing.JButton EditButton;
    private javax.swing.JLabel FacultyTitleHolder;
    private javax.swing.JLabel FireLogo;
    private javax.swing.JPanel HomePanel;
    private SwingPackage.PanelBorder LatestViolationHolder;
    private SwingPackage.PanelBorder LatestViolationsFullWindow;
    private javax.swing.JTable LatestViolationsFullWindowTable;
    private javax.swing.JLabel LatestViolationsTitleBar;
    private javax.swing.JLabel MemoTitle;
    private javax.swing.JPanel MenuHolder;
    private javax.swing.JPanel MenuHolder1;
    private javax.swing.JPanel MenuHolder2;
    private javax.swing.JPanel MenuHolder3;
    private javax.swing.JLabel NameHolder;
    private javax.swing.JLabel OOSDAS;
    private javax.swing.JLabel OOSDAS1;
    private javax.swing.JLabel OOSDAS2;
    private javax.swing.JLabel OOSDAS3;
    private javax.swing.JLabel OSDS_title;
    private SwingPackage.PanelBorder PLMPortalHolder;
    private javax.swing.JLabel PLMSeal;
    private javax.swing.JLabel PLMSeal1;
    private javax.swing.JLabel PLMSeal2;
    private javax.swing.JLabel PLMSeal3;
    private DisabledPanel PanelDisabler;
    private javax.swing.JTabbedPane PanelHolder;
    private SwingPackage.PanelBorder PersonalInformationPanel;
    private javax.swing.JPanel ProfilePanel;
    private javax.swing.JPanel QuickAccessHolder;
    private javax.swing.JPanel QuickSearchHolder;
    private javax.swing.JPanel QuickViolationHolder;
    private SwingPackage.ButtonMaker RecordCancelButton;
    private SwingPackage.ButtonMaker RecordConfirmButton;
    private javax.swing.JLabel SEMESTERholder;
    private javax.swing.JLabel SEMESTERholder1;
    private javax.swing.JLabel SYholder;
    private javax.swing.JLabel SYholder1;
    private SwingPackage.PanelBorder SearchTable;
    private javax.swing.JLabel SearchTitleBar;
    private javax.swing.JLabel Subtitle1;
    private javax.swing.JLabel Subtitle2;
    private javax.swing.JLabel Subtitle3;
    private javax.swing.JLabel TabTitleHolder;
    private javax.swing.JLabel TabTitleHolder1;
    private javax.swing.JLabel TabTitleHolder2;
    private javax.swing.JPanel TitleBar;
    private javax.swing.JLabel TitleField;
    private javax.swing.JPanel ViolationPanel;
    private javax.swing.JPanel addCollegePanel;
    private javax.swing.JPanel addCoursePanel;
    private javax.swing.JPanel addEmployeePanel;
    private javax.swing.JPanel addSchoolYearPanel;
    private javax.swing.JPanel addSemesterPanel;
    private javax.swing.JPanel addSeverityPanel;
    private javax.swing.JPanel addStudentPanel;
    private javax.swing.JPanel addViolationPanel;
    private SwingPackage.ButtonMaker btnFacebookPage;
    private SwingPackage.PanelBorder btnLogoutButton;
    private SwingPackage.ButtonMaker btnOfficialWebsite;
    private SwingPackage.PanelBorder btnOutlookButton;
    private SwingPackage.PanelBorder btnProfileButton;
    private SwingPackage.ButtonMaker btnQuickSearch;
    private SwingPackage.PanelBorder btnRecordButton;
    private SwingPackage.ButtonMaker btnSavePassword;
    private SwingPackage.ButtonMaker btnTeams;
    private SwingPackage.PanelBorder btnViewQuickSearch;
    private SwingPackage.PanelBorder btnViewViolations;
    private SwingPackage.PanelBorder btnViolationsButton;
    private SwingPackage.ButtonMaker buttonMaker1;
    private javax.swing.JComboBox<String> cmbAddCollegeCodeFK;
    private javax.swing.JComboBox<String> cmbAddCollegeStatus;
    private javax.swing.JComboBox<String> cmbAddCourseStatus;
    private javax.swing.JComboBox<String> cmbAddEmployeeGender;
    private javax.swing.JComboBox<String> cmbAddEmployeeStatus;
    private javax.swing.JComboBox<String> cmbAddSeverityCodeFK;
    private javax.swing.JComboBox<String> cmbAddStudentCourseCode;
    private javax.swing.JComboBox<String> cmbAddStudentGender;
    private javax.swing.JComboBox<String> cmbAddStudentStatus;
    private javax.swing.JComboBox<String> cmbAddViolationStatus;
    private javax.swing.JComboBox<String> cmbEditCollegeStatusSelector;
    private javax.swing.JComboBox<String> cmbEditCourseStatus;
    private javax.swing.JComboBox<String> cmbEditEmployeeGender;
    private javax.swing.JComboBox<String> cmbEditEmployeeStatus;
    private javax.swing.JComboBox<String> cmbEditStudentGender;
    private javax.swing.JComboBox<String> cmbEditStudentStatus;
    private javax.swing.JComboBox<String> cmbEditViolationStatus;
    private javax.swing.JPanel defaultPanel;
    private SwingPackage.ButtonMaker dimensionAddButton;
    private SwingPackage.ButtonMaker dimensionDeleteButton;
    private SwingPackage.ButtonMaker dimensionEditButton;
    private javax.swing.JPanel editCollegePanel;
    private javax.swing.JPanel editCoursePanel;
    private javax.swing.JPanel editEmployeePanel;
    private javax.swing.JPanel editSchoolYearPanel;
    private javax.swing.JPanel editSemesterPanel;
    private javax.swing.JPanel editSeverityPanel;
    private javax.swing.JPanel editStudentPanel;
    private javax.swing.JPanel editViolationPanel;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lbAddlGender;
    private javax.swing.JLabel lblAddAddress;
    private javax.swing.JLabel lblAddBirthday;
    private javax.swing.JLabel lblAddCourseCode;
    private javax.swing.JLabel lblAddCpNum;
    private javax.swing.JLabel lblAddDateClosed;
    private javax.swing.JLabel lblAddDateOpened;
    private javax.swing.JLabel lblAddEmail;
    private javax.swing.JLabel lblAddEmployeeAddress;
    private javax.swing.JLabel lblAddEmployeeBirthday;
    private javax.swing.JLabel lblAddEmployeeCpNum;
    private javax.swing.JLabel lblAddEmployeeEmail;
    private javax.swing.JLabel lblAddEmployeeFirstname;
    private javax.swing.JLabel lblAddEmployeeGender;
    private javax.swing.JLabel lblAddEmployeeID;
    private javax.swing.JLabel lblAddEmployeeLastname;
    private javax.swing.JLabel lblAddEmployeeStatus;
    private javax.swing.JLabel lblAddFirstname;
    private javax.swing.JLabel lblAddLastname;
    private javax.swing.JLabel lblAddSchoolYear;
    private javax.swing.JLabel lblAddSemester;
    private javax.swing.JLabel lblAddSeverityCode1;
    private javax.swing.JLabel lblAddSeverityCodeFK;
    private javax.swing.JLabel lblAddSeverityDescription;
    private javax.swing.JLabel lblAddStatus;
    private javax.swing.JLabel lblAddStudentNo;
    private javax.swing.JLabel lblAddViolationCode;
    private javax.swing.JLabel lblAddViolationDescription;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblBirthday;
    private javax.swing.JLabel lblCollegeCode;
    private javax.swing.JLabel lblCollegeCode1;
    private javax.swing.JLabel lblCollegeCodeFK;
    private javax.swing.JLabel lblCollegeCodeFK1;
    private javax.swing.JLabel lblCollegeDateOpened;
    private javax.swing.JLabel lblCollegeDateOpened1;
    private javax.swing.JLabel lblCollegeDescription;
    private javax.swing.JLabel lblCollegeDescription1;
    private javax.swing.JLabel lblCollegeStatus;
    private javax.swing.JLabel lblCollegeStatus1;
    private javax.swing.JLabel lblCourseCode;
    private javax.swing.JLabel lblCourseCode1;
    private javax.swing.JLabel lblCourseDescription;
    private javax.swing.JLabel lblCourseDescription1;
    private javax.swing.JLabel lblCourseStatus;
    private javax.swing.JLabel lblCourseStatus1;
    private javax.swing.JLabel lblCpNum;
    private javax.swing.JLabel lblDateClosedCourse;
    private javax.swing.JLabel lblDateClosedCourse1;
    private javax.swing.JLabel lblDateOpenedCourse;
    private javax.swing.JLabel lblDateOpenedCourse1;
    private javax.swing.JLabel lblEditEmployeeEmail;
    private javax.swing.JLabel lblEditEmployeeFirstname;
    private javax.swing.JLabel lblEditEmployeeGender;
    private javax.swing.JLabel lblEditEmployeeLastname;
    private javax.swing.JLabel lblEditSemester;
    private javax.swing.JLabel lblEditSeverityCode;
    private javax.swing.JLabel lblEditSeverityDescription;
    private javax.swing.JLabel lblEditViolationCode;
    private javax.swing.JLabel lblEditViolationDescription;
    private javax.swing.JLabel lblEditViolationStatus;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFirstname;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblLastname;
    private javax.swing.JLabel lblSchoolYear;
    private javax.swing.JLabel lblSeverityCode;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblStudentNo;
    private javax.swing.JLabel lbllAddViolationStatus;
    private javax.swing.JLabel operationLabel;
    private SwingPackage.PanelBorder panelBorder1;
    private SwingPackage.PanelBorder panelBorder2;
    private SwingPackage.PanelBorder panelBorder3;
    private SwingPackage.PanelBorder panelBorder4;
    private javax.swing.JLabel pass1;
    private javax.swing.JLabel pass2;
    private javax.swing.JLabel pinfo1;
    private javax.swing.JLabel pinfo2;
    private javax.swing.JLabel pinfo3;
    private javax.swing.JLabel pinfo4;
    private javax.swing.JLabel pinfo5;
    private javax.swing.JLabel pinfo6;
    private javax.swing.JLabel pinfo7;
    private javax.swing.JLabel pinfo8;
    private javax.swing.JLabel pinfo9;
    private javax.swing.JLabel redirectButton1;
    private javax.swing.JLabel redirectButton2;
    private javax.swing.JLabel redirectButton3;
    private javax.swing.JLabel redirectButton4;
    private SwingPackage.ButtonMaker s1;
    private SwingPackage.ButtonMaker s3;
    private javax.swing.JTextField selectedTableField;
    private SwingPackage.ButtonMaker showpass1;
    private javax.swing.JTable tblLatestViolationTable;
    private javax.swing.JTable tblQuickSearchTable;
    private javax.swing.JTextField txtAddCollegeCode;
    private javax.swing.JTextField txtAddCollegeDateClosed;
    private javax.swing.JTextField txtAddCollegeDateClosedFK;
    private javax.swing.JTextField txtAddCollegeDateOpened;
    private javax.swing.JTextField txtAddCollegeDateOpenedFK;
    private javax.swing.JTextField txtAddCollegeDescription;
    private javax.swing.JTextField txtAddCourseCode;
    private javax.swing.JTextField txtAddCourseDateClosed;
    private javax.swing.JTextField txtAddCourseDateClosedFK;
    private javax.swing.JTextField txtAddCourseDateOpened;
    private javax.swing.JTextField txtAddCourseDateOpenedFK;
    private javax.swing.JTextField txtAddCourseDescription;
    private javax.swing.JTextField txtAddEmployeeAddress;
    private javax.swing.JTextField txtAddEmployeeBirthday;
    private javax.swing.JTextField txtAddEmployeeCpNum;
    private javax.swing.JTextField txtAddEmployeeEmail;
    private javax.swing.JTextField txtAddEmployeeFirstname;
    private javax.swing.JTextField txtAddEmployeeID;
    private javax.swing.JTextField txtAddEmployeeLastname;
    private javax.swing.JTextField txtAddSchoolYear;
    private javax.swing.JTextField txtAddSemester;
    private javax.swing.JTextField txtAddSeverityCode;
    private javax.swing.JTextField txtAddSeverityDescription;
    private javax.swing.JTextField txtAddStudentAddress;
    private javax.swing.JTextField txtAddStudentBirthday;
    private javax.swing.JTextField txtAddStudentCpNum;
    private javax.swing.JTextField txtAddStudentEmail;
    private javax.swing.JTextField txtAddStudentFirstname;
    private javax.swing.JTextField txtAddStudentLastname;
    private javax.swing.JTextField txtAddStudentNo;
    private javax.swing.JTextField txtAddViolationCode;
    private javax.swing.JTextField txtAddViolationDescription;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAddress2;
    private javax.swing.JTextField txtBday;
    private javax.swing.JTextField txtBirthday;
    private javax.swing.JTextField txtCollegeCodeFK;
    private javax.swing.JTextField txtContactNum;
    private javax.swing.JTextField txtCourseCode;
    private javax.swing.JTextField txtCpNum;
    private javax.swing.JPasswordField txtCurrentPassword;
    private javax.swing.JPasswordField txtCurrentPassword1;
    private javax.swing.JTextField txtDateClosed;
    private javax.swing.JTextField txtDateOpened;
    private javax.swing.JTextField txtEditCollegeCode;
    private javax.swing.JTextField txtEditCollegeDateClosed;
    private javax.swing.JTextField txtEditCollegeDateOpened;
    private javax.swing.JTextField txtEditCollegeDescription;
    private javax.swing.JTextField txtEditCourseCode;
    private javax.swing.JTextField txtEditCourseDescription;
    private javax.swing.JTextField txtEditDateClosed;
    private javax.swing.JTextField txtEditDateOpened;
    private javax.swing.JTextField txtEditEmployeeAddress;
    private javax.swing.JTextField txtEditEmployeeBirthday;
    private javax.swing.JTextField txtEditEmployeeCpNum;
    private javax.swing.JTextField txtEditEmployeeEmail;
    private javax.swing.JTextField txtEditEmployeeFirstname;
    private javax.swing.JTextField txtEditEmployeeID;
    private javax.swing.JTextField txtEditEmployeeLastname;
    private javax.swing.JTextField txtEditSchoolYear;
    private javax.swing.JTextField txtEditSemester;
    private javax.swing.JTextField txtEditSeverityCode;
    private javax.swing.JTextField txtEditSeverityCodeFK;
    private javax.swing.JTextField txtEditSeverityDescription;
    private javax.swing.JTextField txtEditViolationCode;
    private javax.swing.JTextField txtEditViolationDescription;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstname;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtLastname;
    private javax.swing.JTextField txtNewPassword;
    private javax.swing.JTextField txtPLMEmail;
    private javax.swing.JTextField txtPersonalEmail;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtStudentNo;
    private javax.swing.JTextField txtUserInfoName;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables


}




